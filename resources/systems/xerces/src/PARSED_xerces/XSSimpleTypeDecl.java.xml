<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dv\xs\XSSimpleTypeDecl.java">
    <comment type="block">/*
        * Copyright 2001-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>StringTokenizer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>DatatypeException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeFacetException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeValueException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidatedInfo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidationContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>XSFacets</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>XSSimpleType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xpath</name>.<name>
            regex</name>.
            <name>RegularExpression</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>ShortListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>StringListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSObjectListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>ShortList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>StringList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSAnnotation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSFacet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSMultiValueFacet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNamespaceItem</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSSimpleTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.<name>datatypes</name>.
            <name>ObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>TypeInfo</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * @xerces.internal
        *
        * @author Sandy Gao, IBM
        * @author Neeraj Bajaj, Sun Microsystems, inc.
        *
        * @version $Id: XSSimpleTypeDecl.java,v 1.74 2005/06/24 17:19:21 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XSSimpleTypeDecl</name>
        <super>
            <implements>implements <name>XSSimpleType</name>,
                <name>TypeInfo</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_STRING</name>        =
                    <init>
                        <expr>
                            <name>PRIMITIVE_STRING</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_BOOLEAN</name>       =
                    <init>
                        <expr>
                            <name>PRIMITIVE_BOOLEAN</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_DECIMAL</name>       =
                    <init>
                        <expr>
                            <name>PRIMITIVE_DECIMAL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_FLOAT</name>         =
                    <init>
                        <expr>
                            <name>PRIMITIVE_FLOAT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_DOUBLE</name>        =
                    <init>
                        <expr>
                            <name>PRIMITIVE_DOUBLE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_DURATION</name>      =
                    <init>
                        <expr>
                            <name>PRIMITIVE_DURATION</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_DATETIME</name>      =
                    <init>
                        <expr>
                            <name>PRIMITIVE_DATETIME</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_TIME</name>          =
                    <init>
                        <expr>
                            <name>PRIMITIVE_TIME</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_DATE</name>          =
                    <init>
                        <expr>
                            <name>PRIMITIVE_DATE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_GYEARMONTH</name>    =
                    <init>
                        <expr>
                            <name>PRIMITIVE_GYEARMONTH</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_GYEAR</name>         =
                    <init>
                        <expr>
                            <name>PRIMITIVE_GYEAR</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_GMONTHDAY</name>     =
                    <init>
                        <expr>
                            <name>PRIMITIVE_GMONTHDAY</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_GDAY</name>          =
                    <init>
                        <expr>
                            <name>PRIMITIVE_GDAY</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_GMONTH</name>        =
                    <init>
                        <expr>
                            <name>PRIMITIVE_GMONTH</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_HEXBINARY</name>     =
                    <init>
                        <expr>
                            <name>PRIMITIVE_HEXBINARY</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_BASE64BINARY</name>  =
                    <init>
                        <expr>
                            <name>PRIMITIVE_BASE64BINARY</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_ANYURI</name>        =
                    <init>
                        <expr>
                            <name>PRIMITIVE_ANYURI</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_QNAME</name>         =
                    <init>
                        <expr>
                            <name>PRIMITIVE_QNAME</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_PRECISIONDECIMAL</name> =
                    <init>
                        <expr>
                            <name>PRIMITIVE_PRECISIONDECIMAL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_NOTATION</name>      =
                    <init>
                        <expr>
                            <name>PRIMITIVE_NOTATION</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_ANYSIMPLETYPE</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_ID</name>            =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 1
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_IDREF</name>         =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 2
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_ENTITY</name>        =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 3
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_INTEGER</name>       =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 4
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_LIST</name>          =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 5
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_UNION</name>         =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 6
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_YEARMONTHDURATION</name> =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 7
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_DAYTIMEDURATION</name>	=
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 8
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DV_ANYATOMICTYPE</name> =
                    <init>
                        <expr>
                            <name>DV_NOTATION</name>
                            + 9
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>TypeValidator</name>
                        <index>[]</index>
                    </type>
                    <name>fDVs</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>new
                                    <call>
                                        <name>AnySimpleDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>StringDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>BooleanDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DecimalDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>FloatDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DoubleDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DurationDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DateTimeDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>TimeDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DateDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>YearMonthDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>YearDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>MonthDayDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DayDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>MonthDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>HexBinaryDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>Base64BinaryDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>AnyURIDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>QNameDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>PrecisionDecimalDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <comment type="line">// XML Schema 1.1 type</comment>
                                <expr>new
                                    <call>
                                        <name>QNameDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <comment type="line">// notation use the same one as qname</comment>
                                <expr>new
                                    <call>
                                        <name>IDDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>IDREFDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>EntityDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>IntegerDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>ListDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>UnionDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>YearMonthDurationDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <comment type="line">// XML Schema 1.1 type</comment>
                                <expr>new
                                    <call>
                                        <name>DayTimeDurationDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <comment type="line">// XML Schema 1.1 type</comment>
                                <expr>new
                                    <call>
                                        <name>AnyAtomicDV</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                <comment type="line">// XML Schema 1.1 type</comment>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>NORMALIZE_NONE</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>NORMALIZE_TRIM</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>NORMALIZE_FULL</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                        <index>[]</index>
                    </type>
                    <name>fDVNormalizeType</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>NORMALIZE_NONE</name>
                                </expr>
                                ,
                                <comment type="line">//AnySimpleDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_FULL</name>
                                </expr>
                                ,
                                <comment type="line">//StringDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//BooleanDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DecimalDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//FloatDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DoubleDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DurationDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DateTimeDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//TimeDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DateDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//YearMonthDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//YearDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//MonthDayDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DayDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//MonthDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//HexBinaryDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_NONE</name>
                                </expr>
                                ,
                                <comment type="line">//Base64BinaryDV(), // Base64 know how to deal with spaces
                                </comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//AnyURIDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//QNameDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//PrecisionDecimalDV() (Schema 1.1)</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//QNameDV(), // notation</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//IDDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//IDREFDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//EntityDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//IntegerDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_FULL</name>
                                </expr>
                                ,
                                <comment type="line">//ListDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_NONE</name>
                                </expr>
                                ,
                                <comment type="line">//UnionDV(),</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//YearMonthDurationDV() (Schema 1.1)</comment>
                                <expr>
                                    <name>NORMALIZE_TRIM</name>
                                </expr>
                                ,
                                <comment type="line">//DayTimeDurationDV() (Schema 1.1)</comment>
                                <expr>
                                    <name>NORMALIZE_NONE</name>
                                </expr>
                                ,
                                <comment type="line">//AnyAtomicDV() (Schema 1.1)</comment>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>SPECIAL_PATTERN_NONE</name>     =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>SPECIAL_PATTERN_NMTOKEN</name>  =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>SPECIAL_PATTERN_NAME</name>     =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>SPECIAL_PATTERN_NCNAME</name>   =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>SPECIAL_PATTERN_STRING</name>   =
                    <init>
                        <expr>
                            <block>{
                                <expr>"NONE"</expr>, <expr>"NMTOKEN"</expr>, <expr>"Name"</expr>,
                                <expr>"NCName"</expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>WS_FACET_STRING</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>"preserve"</expr>, <expr>"replace"</expr>,
                                <expr>"collapse"</expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>URI_SCHEMAFORSCHEMA</name> =
                    <init>
                        <expr>"http://www.w3.org/2001/XMLSchema"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ANY_TYPE</name> =
                    <init>
                        <expr>"anyType"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// XML Schema 1.1 type constants</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>YEARMONTHDURATION_DT</name>      =
                    <init>
                        <expr>46</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DAYTIMEDURATION_DT</name>        =
                    <init>
                        <expr>47</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>PRECISIONDECIMAL_DT</name>       =
                    <init>
                        <expr>48</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>ANYATOMICTYPE_DT</name>          =
                    <init>
                        <expr>49</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// DOM Level 3 TypeInfo Derivation Method constants</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DERIVATION_ANY</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DERIVATION_RESTRICTION</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DERIVATION_EXTENSION</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DERIVATION_UNION</name> =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DERIVATION_LIST</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>ValidationContext</name>
                    </type>
                    <name>fEmptyContext</name> =
                    <init>
                        <expr>new
                            <class>
                                <super>
                                    <name>ValidationContext</name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>needFacetChecking</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>needExtraChecking</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>needToNormalize</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>useNamespaces</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>isEntityDeclared</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>isEntityUnparsed</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>isIdDeclared</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>void</name>
                                        </type>
                                        <name>addId</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>void</name>
                                        </type>
                                        <name>addIdRef</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>String</name>
                                        </type>
                                        <name>getSymbol</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>symbol</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>symbol</name>.
                                                            <name>intern</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>String</name>
                                        </type>
                                        <name>getURI</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>prefix</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// this will be true if this is a static XSSimpleTypeDecl</comment>
            <comment type="line">// and hence must remain immutable (i.e., applyFacets</comment>
            <comment type="line">// may not be permitted to have any effect).</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsImmutable</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSSimpleTypeDecl</name>
                    </type>
                    <name>fItemType</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSSimpleTypeDecl</name>
                        <index>[]</index>
                    </type>
                    <name>fMemberTypes</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// The most specific built-in type kind.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fBuiltInKind</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fTypeName</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fTargetNamespace</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fFinalSet</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSSimpleTypeDecl</name>
                    </type>
                    <name>fBase</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fVariety</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fValidationDV</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fFacetsDefined</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fFixedFacet</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//for constraining facets</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fWhiteSpace</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fLength</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fMinLength</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fMaxLength</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fTotalDigits</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fFractionDigits</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fPattern</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fPatternStr</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fEnumeration</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                        <index>[]</index>
                    </type>
                    <name>fEnumerationType</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ShortList</name>
                        <index>[]</index>
                    </type>
                    <name>fEnumerationItemType</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// used in case fenumerationType value is LIST or LISTOFUNION</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ShortList</name>
                    </type>
                    <name>fEnumerationTypeList</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>fEnumerationItemTypeList</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>StringList</name>
                    </type>
                    <name>fLexicalPattern</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>StringList</name>
                    </type>
                    <name>fLexicalEnumeration</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>fActualEnumeration</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                    </type>
                    <name>fMaxInclusive</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                    </type>
                    <name>fMaxExclusive</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                    </type>
                    <name>fMinExclusive</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                    </type>
                    <name>fMinInclusive</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// annotations for constraining facets</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>lengthAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>minLengthAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>maxLengthAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>whiteSpaceAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>totalDigitsAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>fractionDigitsAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSObjectListImpl</name>
                    </type>
                    <name>patternAnnotations</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSObjectList</name>
                    </type>
                    <name>enumerationAnnotations</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>maxInclusiveAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>maxExclusiveAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>minInclusiveAnnotation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>XSAnnotation</name>
                    </type>
                    <name>minExclusiveAnnotation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// facets as objects</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSObjectListImpl</name>
                    </type>
                    <name>fFacets</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// enumeration and pattern facets</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSObjectListImpl</name>
                    </type>
                    <name>fMultiValueFacets</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// simpleType annotations</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSObjectList</name>
                    </type>
                    <name>fAnnotations</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fPatternType</name> =
                    <init>
                        <expr>
                            <name>SPECIAL_PATTERN_NONE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for fundamental facets</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>fOrdered</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFinite</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fBounded</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNumeric</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// default constructor</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XSSimpleTypeDecl</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>

            <comment type="line">//Create a new built-in primitive types (and
                id/idref/entity/integer/yearMonthDuration)
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XSSimpleTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>validateDV</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>ordered</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>bounded</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>finite</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>numeric</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isImmutable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>builtInKind</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            =
                            <name>isImmutable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>base</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>URI_SCHEMAFORSCHEMA</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// To simplify the code for anySimpleType, we treat it as an atomic type
                    </comment>
                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name>VARIETY_ATOMIC</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name>validateDV</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>validateDV</name>
                                ==
                                <name>DV_STRING</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fWhiteSpace</name>
                                        =
                                        <name>WS_PRESERVE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fWhiteSpace</name>
                                        =
                                        <name>WS_COLLAPSE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fFixedFacet</name>
                                        =
                                        <name>FACET_WHITESPACE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fOrdered</name>
                            </name>
                            =
                            <name>ordered</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fBounded</name>
                            </name>
                            =
                            <name>bounded</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fFinite</name>
                            </name>
                            =
                            <name>finite</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fNumeric</name>
                            </name>
                            =
                            <name>numeric</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Specify the build in kind for this primitive type</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name>builtInKind</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//Create a new simple type for restriction for built-in types</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XSSimpleTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isImmutable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>builtInKind</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>base</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>uri</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>finalSet</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isImmutable</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>annotations</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Specify the build in kind for this built-in type</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name>builtInKind</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//Create a new simple type for restriction.</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XSSimpleTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isImmutable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>base</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            =
                            <name>finalSet</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>annotations</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name><name>fBase</name>.
                                <name>fVariety</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name><name>fBase</name>.
                                <name>fValidationDV</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>VARIETY_ATOMIC</name>
                                </expr>
                                :
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>VARIETY_LIST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>fItemType</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fItemType</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>VARIETY_UNION</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>fMemberTypes</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMemberTypes</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <comment type="line">// always inherit facets from the base.</comment>
                    <comment type="line">// in case a type is created, but applyFacets is not called</comment>
                    <expr_stmt>
                        <expr>
                            <name>fLength</name>
                            =
                            <name><name>fBase</name>.
                                <name>fLength</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinLength</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMinLength</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxLength</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMaxLength</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPattern</name>
                            =
                            <name><name>fBase</name>.
                                <name>fPattern</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPatternStr</name>
                            =
                            <name><name>fBase</name>.
                                <name>fPatternStr</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumeration</name>
                            =
                            <name><name>fBase</name>.
                                <name>fEnumeration</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumerationType</name>
                            =
                            <name><name>fBase</name>.
                                <name>fEnumerationType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumerationItemType</name>
                            =
                            <name><name>fBase</name>.
                                <name>fEnumerationItemType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            =
                            <name><name>fBase</name>.
                                <name>fWhiteSpace</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxExclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMaxExclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxInclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMaxInclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinExclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMinExclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinInclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMinInclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTotalDigits</name>
                            =
                            <name><name>fBase</name>.
                                <name>fTotalDigits</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFractionDigits</name>
                            =
                            <name><name>fBase</name>.
                                <name>fFractionDigits</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPatternType</name>
                            =
                            <name><name>fBase</name>.
                                <name>fPatternType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            =
                            <name><name>fBase</name>.
                                <name>fFixedFacet</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name><name>fBase</name>.
                                <name>fFacetsDefined</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//we also set fundamental facets information in case applyFacets is not
                        called.
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            =
                            <name>isImmutable</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Inherit from the base type</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name><name>base</name>.
                                <name>fBuiltInKind</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//Create a new simple type for list.</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XSSimpleTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>itemType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isImmutable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>fAnySimpleType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            =
                            <name>finalSet</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>annotations</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name>VARIETY_LIST</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fItemType</name>
                            = (<name>XSSimpleTypeDecl</name>)
                            <name>itemType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name>DV_LIST</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            =
                            <name>WS_COLLAPSE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//setting fundamental facets</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            =
                            <name>isImmutable</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Values of this type are lists</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name><name>XSConstants</name>.
                                <name>LIST_DT</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//Create a new simple type for union.</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XSSimpleTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSSimpleTypeDecl</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>memberTypes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>fAnySimpleType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            =
                            <name>finalSet</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>annotations</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name>VARIETY_UNION</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMemberTypes</name>
                            =
                            <name>memberTypes</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name>DV_UNION</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// even for union, we set whitespace to something</comment>
                    <comment type="line">// this will never be used, but we can use fFacetsDefined to check</comment>
                    <comment type="line">// whether applyFacets() is allwwed: it's not allowed</comment>
                    <comment type="line">// if fFacetsDefined != 0</comment>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            =
                            <name>WS_COLLAPSE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//setting fundamental facets</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// none of the schema-defined types are unions, so just set</comment>
                    <comment type="line">// fIsImmutable to false.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// No value can be of this type, so it's unavailable.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name><name>XSConstants</name>.
                                <name>UNAVAILABLE_DT</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//set values for restriction.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XSSimpleTypeDecl</name>
                </type>
                <name>setRestrictionValues</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//decline to do anything if the object is immutable.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fIsImmutable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>base</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            =
                            <name>finalSet</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>annotations</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name><name>fBase</name>.
                                <name>fVariety</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name><name>fBase</name>.
                                <name>fValidationDV</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>VARIETY_ATOMIC</name>
                                </expr>
                                :
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>VARIETY_LIST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>fItemType</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fItemType</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>VARIETY_UNION</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>fMemberTypes</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMemberTypes</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <comment type="line">// always inherit facets from the base.</comment>
                    <comment type="line">// in case a type is created, but applyFacets is not called</comment>
                    <expr_stmt>
                        <expr>
                            <name>fLength</name>
                            =
                            <name><name>fBase</name>.
                                <name>fLength</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinLength</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMinLength</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxLength</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMaxLength</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPattern</name>
                            =
                            <name><name>fBase</name>.
                                <name>fPattern</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPatternStr</name>
                            =
                            <name><name>fBase</name>.
                                <name>fPatternStr</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumeration</name>
                            =
                            <name><name>fBase</name>.
                                <name>fEnumeration</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumerationType</name>
                            =
                            <name><name>fBase</name>.
                                <name>fEnumerationType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumerationItemType</name>
                            =
                            <name><name>fBase</name>.
                                <name>fEnumerationItemType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            =
                            <name><name>fBase</name>.
                                <name>fWhiteSpace</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxExclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMaxExclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxInclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMaxInclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinExclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMinExclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinInclusive</name>
                            =
                            <name><name>fBase</name>.
                                <name>fMinInclusive</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTotalDigits</name>
                            =
                            <name><name>fBase</name>.
                                <name>fTotalDigits</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFractionDigits</name>
                            =
                            <name><name>fBase</name>.
                                <name>fFractionDigits</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPatternType</name>
                            =
                            <name><name>fBase</name>.
                                <name>fPatternType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            =
                            <name><name>fBase</name>.
                                <name>fFixedFacet</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name><name>fBase</name>.
                                <name>fFacetsDefined</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//we also set fundamental facets information in case applyFacets is not
                        called.
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Inherit from the base type</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name><name>base</name>.
                                <name>fBuiltInKind</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//set values for list.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XSSimpleTypeDecl</name>
                </type>
                <name>setListValues</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>itemType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//decline to do anything if the object is immutable.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fIsImmutable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>fAnySimpleType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            =
                            <name>finalSet</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>annotations</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name>VARIETY_LIST</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fItemType</name>
                            = (<name>XSSimpleTypeDecl</name>)
                            <name>itemType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name>DV_LIST</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            =
                            <name>WS_COLLAPSE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//setting fundamental facets</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Values of this type are lists</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name><name>XSConstants</name>.
                                <name>LIST_DT</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//set values for union.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XSSimpleTypeDecl</name>
                </type>
                <name>setUnionValues</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>finalSet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSSimpleTypeDecl</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>memberTypes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//decline to do anything if the object is immutable.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fIsImmutable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>fAnySimpleType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            =
                            <name>finalSet</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>annotations</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            =
                            <name>VARIETY_UNION</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMemberTypes</name>
                            =
                            <name>memberTypes</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            =
                            <name>DV_UNION</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// even for union, we set whitespace to something</comment>
                    <comment type="line">// this will never be used, but we can use fFacetsDefined to check</comment>
                    <comment type="line">// whether applyFacets() is allwwed: it's not allowed</comment>
                    <comment type="line">// if fFacetsDefined != 0</comment>
                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            =
                            <name>FACET_WHITESPACE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            =
                            <name>WS_COLLAPSE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//setting fundamental facets</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// No value can be of this type, so it's unavailable.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBuiltInKind</name>
                            =
                            <name><name>XSConstants</name>.
                                <name>UNAVAILABLE_DT</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>XSConstants</name>.
                                <name>TYPE_DEFINITION</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getTypeCategory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>SIMPLE_TYPE</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getAnonymous</name>
                                <argument_list>()</argument_list>
                            </call>
                            ?<name>null</name>:
                            <name>fTypeName</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTypeName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fTypeName</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNamespace</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fTargetNamespace</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getFinal</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fFinalSet</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isFinal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>derivation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fFinalSet</name> &amp; <name>derivation</name>) != 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSTypeDefinition</name>
                </type>
                <name>getBaseType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fBase</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAnonymous</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fAnonymous</name>
                            || (<name>fTypeName</name> == <name>null</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getVariety</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// for anySimpleType, return absent variaty</comment>
                    <return>return
                        <expr>
                            <name>fValidationDV</name>
                            == <name>DV_ANYSIMPLETYPE</name> ? <name>VARIETY_ABSENT</name> :
                            <name>fVariety</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isIDType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>VARIETY_ATOMIC</name>
                                </expr>
                                :
                                <return>return
                                    <expr>
                                        <name>fValidationDV</name>
                                        ==
                                        <name>DV_ID</name>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>VARIETY_LIST</name>
                                </expr>
                                :
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>fItemType</name>.
                                                <name>isIDType</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>VARIETY_UNION</name>
                                </expr>
                                :
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fMemberTypes</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fMemberTypes</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>isIDType</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return <expr>true</expr>;
                                                </return>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                            </case>
                            }
                        </block>
                    </switch>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getWhitespace</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DatatypeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_UNION</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DatatypeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"dt-whitespace"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>fTypeName</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fWhiteSpace</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getPrimitiveKind</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                == <name>VARIETY_ATOMIC</name> &amp;&amp; <name>fValidationDV</name> !=
                                <name>DV_ANYSIMPLETYPE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fValidationDV</name>
                                            == <name>DV_ID</name> || <name>fValidationDV</name> == <name>DV_IDREF</name> || <name>
                                            fValidationDV
                                        </name> ==
                                            <name>DV_ENTITY</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>DV_STRING</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fValidationDV</name>
                                                    ==
                                                    <name>DV_INTEGER</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>DV_DECIMAL</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>SCHEMA_1_1_SUPPORT</name>
                                                            </name>
                                                            &amp;&amp; (<name>fValidationDV</name> == <name>
                                                            DV_YEARMONTHDURATION
                                                        </name> || <name>fValidationDV</name> == <name>
                                                            DV_DAYTIMEDURATION</name>)
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>DV_DURATION</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>fValidationDV</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// REVISIT: error situation. runtime exception?</comment>
                                <return>return
                                    <expr>(<name>short</name>)0
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the closest built-in type category this type represents or
                * derived from. For example, if this simple type is a built-in derived
                * type integer the &lt;code&gt;INTEGER_DV&lt;/code&gt; is returned.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getBuiltInKind</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>fBuiltInKind</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If variety is &lt;code&gt;atomic&lt;/code&gt; the primitive type definition (a
                * built-in primitive datatype definition or the simple ur-type
                * definition) is available, otherwise &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSSimpleTypeDefinition</name>
                </type>
                <name>getPrimitiveType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                == <name>VARIETY_ATOMIC</name> &amp;&amp; <name>fValidationDV</name> !=
                                <name>DV_ANYSIMPLETYPE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSSimpleTypeDecl</name>
                                        </type>
                                        <name>pri</name> =
                                        <init>
                                            <expr>
                                                <name>this</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// recursively get base, until we reach anySimpleType</comment>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <name><name>pri</name>.
                                                <name>fBase</name>
                                            </name>
                                            !=
                                            <name>fAnySimpleType</name>
                                        </expr>
                                        )
                                    </condition>
                                    <expr_stmt>
                                        <expr>
                                            <name>pri</name>
                                            =
                                            <name><name>pri</name>.
                                                <name>fBase</name>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </while>
                                <return>return
                                    <expr>
                                        <name>pri</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// REVISIT: error situation. runtime exception?</comment>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If variety is &lt;code&gt;list&lt;/code&gt; the item type definition (an atomic or
                * union simple type definition) is available, otherwise
                * &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSSimpleTypeDefinition</name>
                </type>
                <name>getItemType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_LIST</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>fItemType</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// REVISIT: error situation. runtime exception?</comment>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If variety is &lt;code&gt;union&lt;/code&gt; the list of member type definitions (a
                * non-empty sequence of simple type definitions) is available,
                * otherwise an empty &lt;code&gt;XSObjectList&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getMemberTypes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_UNION</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>XSObjectListImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fMemberTypes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fMemberTypes</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>XSObjectListImpl</name>.
                                            <name>EMPTY_LIST</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If &lt;restriction&gt; is chosen
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>applyFacets</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSFacets</name>
                            </type>
                            <name>facets</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>presentFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>fixedFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeFacetException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>applyFacets</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>facets</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>presentFacet</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fixedFacet</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>SPECIAL_PATTERN_NONE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * built-in derived types by restriction
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>applyFacets1</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSFacets</name>
                            </type>
                            <name>facets</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>presentFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>fixedFacet</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>applyFacets</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>facets</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>presentFacet</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fixedFacet</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>SPECIAL_PATTERN_NONE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fDummyContext</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>InvalidDatatypeFacetException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// should never gets here, internel error</comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"internal error"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <comment type="line">// we've now applied facets; so lock this object:</comment>
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * built-in derived types by restriction
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>applyFacets1</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSFacets</name>
                            </type>
                            <name>facets</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>presentFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>fixedFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>patternType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>applyFacets</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>facets</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>presentFacet</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fixedFacet</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>patternType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fDummyContext</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>InvalidDatatypeFacetException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// should never gets here, internel error</comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"internal error"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <comment type="line">// we've now applied facets; so lock this object:</comment>
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If &lt;restriction&gt; is chosen, or built-in derived types by restriction
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>applyFacets</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSFacets</name>
                            </type>
                            <name>facets</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>presentFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>fixedFacet</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>patternType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeFacetException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// if the object is immutable, should not apply facets...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fIsImmutable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>tempInfo</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ValidatedInfo</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// clear facets. because we always inherit facets in the constructor</comment>
                    <comment type="line">// REVISIT: in fact, we don't need to clear them.</comment>
                    <comment type="line">// we can convert 5 string values (4 bounds + 1 enum) to actual values,
                    </comment>
                    <comment type="line">// store them somewhere, then do facet checking at once, instead of</comment>
                    <comment type="line">// going through the following steps. (lots of checking are redundant:
                    </comment>
                    <comment type="line">// for example, ((presentFacet &amp; FACET_XXX) != 0))</comment>

                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// step 1: parse present facets</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>allowedFacet</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fDVs</name>
                                        <index>[
                                            <expr>
                                                <name>fValidationDV</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>getAllowedFacets</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// length</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_LENGTH</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_LENGTH</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"length"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fLength</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>lengthAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>lengthAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_LENGTH</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>FACET_LENGTH</name>) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_LENGTH</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// minLength</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_MINLENGTH</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_MINLENGTH</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"minLength"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fMinLength</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>minLength</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>minLengthAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>minLengthAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_MINLENGTH</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>FACET_MINLENGTH</name>)
                                                        != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_MINLENGTH</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// maxLength</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_MAXLENGTH</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_MAXLENGTH</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"maxLength"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fMaxLength</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>maxLength</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>maxLengthAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>maxLengthAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_MAXLENGTH</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>FACET_MAXLENGTH</name>)
                                                        != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_MAXLENGTH</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// pattern</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_PATTERN</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_PATTERN</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"pattern"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>patternAnnotations</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>patternAnnotations</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>RegularExpression</name>
                                                    </type>
                                                    <name>regex</name> =
                                                    <init>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>regex</name>
                                                            = new
                                                            <call>
                                                                <name>RegularExpression</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>facets</name>.
                                                                                <name>pattern</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"X"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>Exception</name>
                                                            </type>
                                                            <name>e</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"InvalidRegex"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>pattern</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>e</name>.
                                                                                                <name>
                                                                                                    getLocalizedMessage
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>regex</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fPattern</name>
                                                                = new
                                                                <call>
                                                                    <name>Vector</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fPattern</name>.
                                                                        <name>addElement</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>regex</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fPatternStr</name>
                                                                = new
                                                                <call>
                                                                    <name>Vector</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fPatternStr</name>.
                                                                        <name>addElement</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>facets</name>.
                                                                                    <name>pattern</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fFacetsDefined</name>
                                                                |=
                                                                <name>FACET_PATTERN</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>(<name>fixedFacet</name> &amp; <name>
                                                                    FACET_PATTERN</name>) != 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>fFixedFacet</name>
                                                                        |=
                                                                        <name>FACET_PATTERN</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// enumeration</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_ENUMERATION</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_ENUMERATION</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"enumeration"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fEnumeration</name>
                                                    = new
                                                    <call>
                                                        <name>Vector</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Vector</name>
                                                    </type>
                                                    <name>enumVals</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>facets</name>.
                                                                <name>enumeration</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fEnumerationType</name>
                                                    = new
                                                    <name>
                                                        <name>short</name>
                                                        <index>[
                                                            <expr>
                                                                <call>
                                                                    <name><name>enumVals</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fEnumerationItemType</name>
                                                    = new
                                                    <name>
                                                        <name>ShortList</name>
                                                        <index>[
                                                            <expr>
                                                                <call>
                                                                    <name><name>enumVals</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Vector</name>
                                                    </type>
                                                    <name>enumNSDecls</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>facets</name>.
                                                                <name>enumNSDecls</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>ValidationContextImpl</name>
                                                    </type>
                                                    <name>ctx</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>ValidationContextImpl</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>enumerationAnnotations</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>enumAnnotations</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <call>
                                                            <name><name>enumVals</name>.
                                                                <name>size</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>enumNSDecls</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ctx</name>.
                                                                            <name>setNSContext</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>NamespaceContext</name>)
                                                                                    <call>
                                                                                        <name><name>enumNSDecls</name>.
                                                                                            <name>elementAt</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    <try>try
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>ValidatedInfo</name>
                                                                    </type>
                                                                    <name>info</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>this</name>.<name>
                                                                                    fBase</name>.
                                                                                    <name>validateWithInfo</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>(<name>String</name>)
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    enumVals</name>.
                                                                                                    <name>elementAt
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>ctx</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tempInfo</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <comment type="line">// check 4.3.5.c0 must: enumeration
                                                                values from the value space of base
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fEnumeration</name>.
                                                                            <name>addElement</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>info</name>.
                                                                                        <name>actualValue</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>fEnumerationType</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name><name>info</name>.
                                                                        <name>actualValueType</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>fEnumerationItemType</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name><name>info</name>.
                                                                        <name>itemValueTypes</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                        <catch>catch (
                                                            <param>
                                                                <decl>
                                                                    <type>
                                                                        <name>InvalidDatatypeValueException</name>
                                                                    </type>
                                                                    <name>ide</name>
                                                                </decl>
                                                            </param>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        "enumeration-valid-restriction"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        enumVals</name>.
                                                                                                        <name>
                                                                                                            elementAt
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    i
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        this</name>.
                                                                                                        <name>
                                                                                                            getBaseType
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                                .
                                                                                                <call>
                                                                                                    <name>getName</name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </catch>
                                                    </try>
                                                    }
                                                </block>
                                            </for>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_ENUMERATION</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>FACET_ENUMERATION</name>)
                                                        != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_ENUMERATION</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// whiteSpace</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_WHITESPACE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_WHITESPACE</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"whiteSpace"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fWhiteSpace</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>whiteSpace</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>whiteSpaceAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>whiteSpaceAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_WHITESPACE</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>FACET_WHITESPACE</name>)
                                                        != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_WHITESPACE</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// maxInclusive</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_MAXINCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_MAXINCLUSIVE</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"maxInclusive"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>maxInclusiveAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>maxInclusiveAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fMaxInclusive</name>
                                                            =
                                                            <call>
                                                                <name><name>fBase</name>.
                                                                    <name>getActualValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>facets</name>.
                                                                                <name>maxInclusive</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tempInfo</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFacetsDefined</name>
                                                            |=
                                                            <name>FACET_MAXINCLUSIVE</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fixedFacet</name> &amp; <name>
                                                                FACET_MAXINCLUSIVE</name>) != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fFixedFacet</name>
                                                                    |=
                                                                    <name>FACET_MAXINCLUSIVE</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>InvalidDatatypeValueException</name>
                                                            </type>
                                                            <name>ide</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getArgs</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FacetValueFromBase"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>maxInclusive</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"maxInclusive"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>

                                            <comment type="line">// check against fixed value in base</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MAXINCLUSIVE</name>) != 0)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_MAXINCLUSIVE</name>) != 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fDVs</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>fValidationDV</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                .
                                                                                <call>
                                                                                    <name>compare</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fMaxInclusive
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>fBase</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        fMaxInclusive
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                != 0
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "FixedFacetValue"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{<expr>
                                                                                                        "maxInclusive"</expr>,
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                fMaxInclusive
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                fBase</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    fMaxInclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                fTypeName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// maxInclusive from base</comment>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fBase</name>.
                                                                    <name>validate</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tempInfo</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>InvalidDatatypeValueException</name>
                                                            </type>
                                                            <name>ide</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getArgs</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FacetValueFromBase"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>maxInclusive</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"maxInclusive"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// maxExclusive</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>needCheckBase</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"maxExclusive"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>maxExclusiveAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>maxExclusiveAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fMaxExclusive</name>
                                                            =
                                                            <call>
                                                                <name><name>fBase</name>.
                                                                    <name>getActualValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>facets</name>.
                                                                                <name>maxExclusive</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tempInfo</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFacetsDefined</name>
                                                            |=
                                                            <name>FACET_MAXEXCLUSIVE</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fixedFacet</name> &amp; <name>
                                                                FACET_MAXEXCLUSIVE</name>) != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fFixedFacet</name>
                                                                    |=
                                                                    <name>FACET_MAXEXCLUSIVE</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>InvalidDatatypeValueException</name>
                                                            </type>
                                                            <name>ide</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getArgs</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FacetValueFromBase"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>maxExclusive</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"maxExclusive"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>

                                            <comment type="line">// check against fixed value in base</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>result</name>
                                                                =
                                                                <name>
                                                                    <name>fDVs</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>fValidationDV</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>compare</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fMaxExclusive</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fBase</name>.
                                                                                    <name>fMaxExclusive</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0 &amp;&amp; <name>
                                                                        result
                                                                    </name> != 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FixedFacetValue"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{<expr>
                                                                                                "maxExclusive"</expr>,
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        facets</name>.
                                                                                                        <name>
                                                                                                            maxExclusive
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        fBase</name>.
                                                                                                        <name>
                                                                                                            fMaxExclusive
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>result</name>
                                                                    == 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>needCheckBase</name>
                                                                            = false
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// maxExclusive from base</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>needCheckBase</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <try>try
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fBase</name>.
                                                                                <name>validate</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>context</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tempInfo</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                            <catch>catch (
                                                                <param>
                                                                    <decl>
                                                                        <type>
                                                                            <name>InvalidDatatypeValueException</name>
                                                                        </type>
                                                                        <name>ide</name>
                                                                    </decl>
                                                                </param>
                                                                )
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>ide</name>.
                                                                                                    <name>getKey</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>ide</name>.
                                                                                                    <name>getArgs</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FacetValueFromBase"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        facets</name>.
                                                                                                        <name>
                                                                                                            maxExclusive
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    "maxExclusive"</expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            fBase</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                getName
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </catch>
                                                        </try>
                                                        }
                                                    </block>
                                                </then>
                                                <comment type="line">// If maxExclusive == base.maxExclusive, then we
                                                    only need to check
                                                </comment>
                                                <comment type="line">// maxExclusive &lt;= base.maxInclusive</comment>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>((
                                                                <name><name>fBase</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MAXINCLUSIVE</name>) != 0)
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>
                                                                                <name>fDVs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>fValidationDV</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>compare</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fMaxExclusive</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>fMaxInclusive
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            &gt; 0
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "maxExclusive-valid-restriction.2"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                facets</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    maxExclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                fBase</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    fMaxInclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// minExclusive</comment>
                    <expr_stmt>
                        <expr>
                            <name>needCheckBase</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_MINEXCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_MINEXCLUSIVE</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"minExclusive"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>minExclusiveAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>minExclusiveAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fMinExclusive</name>
                                                            =
                                                            <call>
                                                                <name><name>fBase</name>.
                                                                    <name>getActualValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>facets</name>.
                                                                                <name>minExclusive</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tempInfo</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFacetsDefined</name>
                                                            |=
                                                            <name>FACET_MINEXCLUSIVE</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fixedFacet</name> &amp; <name>
                                                                FACET_MINEXCLUSIVE</name>) != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fFixedFacet</name>
                                                                    |=
                                                                    <name>FACET_MINEXCLUSIVE</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>InvalidDatatypeValueException</name>
                                                            </type>
                                                            <name>ide</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getArgs</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FacetValueFromBase"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>minExclusive</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"minExclusive"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>

                                            <comment type="line">// check against fixed value in base</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MINEXCLUSIVE</name>) != 0)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>result</name>
                                                                =
                                                                <name>
                                                                    <name>fDVs</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>fValidationDV</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>compare</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fMinExclusive</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fBase</name>.
                                                                                    <name>fMinExclusive</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_MINEXCLUSIVE</name>) != 0 &amp;&amp; <name>
                                                                        result
                                                                    </name> != 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FixedFacetValue"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{<expr>
                                                                                                "minExclusive"</expr>,
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        facets</name>.
                                                                                                        <name>
                                                                                                            minExclusive
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        fBase</name>.
                                                                                                        <name>
                                                                                                            fMinExclusive
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>result</name>
                                                                    == 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>needCheckBase</name>
                                                                            = false
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// minExclusive from base</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>needCheckBase</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <try>try
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fBase</name>.
                                                                                <name>validate</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>context</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tempInfo</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                            <catch>catch (
                                                                <param>
                                                                    <decl>
                                                                        <type>
                                                                            <name>InvalidDatatypeValueException</name>
                                                                        </type>
                                                                        <name>ide</name>
                                                                    </decl>
                                                                </param>
                                                                )
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>ide</name>.
                                                                                                    <name>getKey</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>ide</name>.
                                                                                                    <name>getArgs</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FacetValueFromBase"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        facets</name>.
                                                                                                        <name>
                                                                                                            minExclusive
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    "minExclusive"</expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            fBase</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                getName
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </catch>
                                                        </try>
                                                        }
                                                    </block>
                                                </then>
                                                <comment type="line">// If minExclusive == base.minExclusive, then we
                                                    only need to check
                                                </comment>
                                                <comment type="line">// minExclusive &gt;= base.minInclusive</comment>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>((
                                                                <name><name>fBase</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MININCLUSIVE</name>) != 0)
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>
                                                                                <name>fDVs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>fValidationDV</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>compare</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fMinExclusive</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>fMinInclusive
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            &lt; 0
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "minExclusive-valid-restriction.3"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                facets</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    minExclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                fBase</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    fMinInclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// minInclusive</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_MININCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_MININCLUSIVE</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"minInclusive"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>minInclusiveAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>minInclusiveAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fMinInclusive</name>
                                                            =
                                                            <call>
                                                                <name><name>fBase</name>.
                                                                    <name>getActualValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>facets</name>.
                                                                                <name>minInclusive</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tempInfo</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFacetsDefined</name>
                                                            |=
                                                            <name>FACET_MININCLUSIVE</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fixedFacet</name> &amp; <name>
                                                                FACET_MININCLUSIVE</name>) != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fFixedFacet</name>
                                                                    |=
                                                                    <name>FACET_MININCLUSIVE</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>InvalidDatatypeValueException</name>
                                                            </type>
                                                            <name>ide</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getArgs</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FacetValueFromBase"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>minInclusive</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"minInclusive"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>

                                            <comment type="line">// check against fixed value in base</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MININCLUSIVE</name>) != 0)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_MININCLUSIVE</name>) != 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fDVs</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>fValidationDV</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                .
                                                                                <call>
                                                                                    <name>compare</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fMinInclusive
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>fBase</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        fMinInclusive
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                != 0
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "FixedFacetValue"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{<expr>
                                                                                                        "minInclusive"</expr>,
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                facets</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    minInclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                fBase</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    fMinInclusive
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                fTypeName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// minInclusive from base</comment>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fBase</name>.
                                                                    <name>validate</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>context</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tempInfo</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>InvalidDatatypeValueException</name>
                                                            </type>
                                                            <name>ide</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getArgs</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FacetValueFromBase"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name><name>facets</name>.
                                                                                            <name>minInclusive</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"minInclusive"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// totalDigits</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_TOTALDIGITS</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_TOTALDIGITS</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"totalDigits"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>totalDigitsAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>totalDigitsAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fTotalDigits</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>totalDigits</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_TOTALDIGITS</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>FACET_TOTALDIGITS</name>)
                                                        != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_TOTALDIGITS</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// fractionDigits</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>presentFacet</name> &amp; <name>FACET_FRACTIONDIGITS</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>allowedFacet</name> &amp; <name>FACET_FRACTIONDIGITS</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-applicable-facets"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"fractionDigits"</expr>,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFractionDigits</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>fractionDigits</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fractionDigitsAnnotation</name>
                                                    =
                                                    <name><name>facets</name>.
                                                        <name>fractionDigitsAnnotation</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_FRACTIONDIGITS</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fixedFacet</name> &amp; <name>
                                                        FACET_FRACTIONDIGITS</name>) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFixedFacet</name>
                                                            |=
                                                            <name>FACET_FRACTIONDIGITS</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// token type: internal use, so do less checking</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>patternType</name>
                                !=
                                <name>SPECIAL_PATTERN_NONE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fPatternType</name>
                                        =
                                        <name>patternType</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// step 2: check facets against each other: length, bounds</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fFacetsDefined</name>
                                != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// check 4.3.1.c1 error: length &amp; (maxLength | minLength)
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_LENGTH</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>(<name>fFacetsDefined</name> &amp; <name>
                                                        FACET_MINLENGTH</name>) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>(<name>fFacetsDefined</name> &amp; <name>
                                                                    FACET_MAXLENGTH</name>) != 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// length, minLength and
                                                                        maxLength defined
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "length-minLength-maxLength.a"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fMinLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fMaxLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <comment type="line">// length and minLength
                                                                        defined
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "length-minLength-maxLength.b"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fMinLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fFacetsDefined</name> &amp; <name>
                                                                FACET_MAXLENGTH</name>) != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// length and maxLength defined
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        "length-minLength-maxLength.c"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <name>fTypeName</name>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fLength
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fMaxLength
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.2.c1 must: minLength &lt;= maxLength</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MINLENGTH</name> ) != 0 )
                                            &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>FACET_MAXLENGTH</name>)
                                            != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fMinLength</name>
                                                        &gt;
                                                        <name>fMaxLength</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"minLength-less-than-equal-to-maxLength"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>Integer</name>.
                                                                                            <name>toString</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fMinLength
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>Integer</name>.
                                                                                            <name>toString</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fMaxLength
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.8.c1 error: maxInclusive + maxExclusive</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0)
                                            &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>
                                                FACET_MAXINCLUSIVE</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"maxInclusive-maxExclusive"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>fMaxInclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fMaxExclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.9.c1 error: minInclusive + minExclusive</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MINEXCLUSIVE</name>) != 0)
                                            &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>
                                                FACET_MININCLUSIVE</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"minInclusive-minExclusive"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>fMinInclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fMinExclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.7.c1 must: minInclusive &lt;= maxInclusive</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp;  <name>FACET_MAXINCLUSIVE</name>) !=
                                            0) &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>
                                                FACET_MININCLUSIVE</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name>
                                                        <name>fDVs</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fValidationDV</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>compare</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fMinInclusive</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fMaxInclusive</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>result</name>
                                                        != -1 &amp;&amp; <name>result</name> != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            "minInclusive-less-than-equal-to-maxInclusive"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>fMinInclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fMaxInclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.8.c2 must: minExclusive &lt;= maxExclusive ???
                                    minExclusive &lt; maxExclusive
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0)
                                            &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>
                                                FACET_MINEXCLUSIVE</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name>
                                                        <name>fDVs</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fValidationDV</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>compare</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fMinExclusive</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fMaxExclusive</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>result</name>
                                                        != -1 &amp;&amp; <name>result</name> != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            "minExclusive-less-than-equal-to-maxExclusive"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>fMinExclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fMaxExclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.9.c2 must: minExclusive &lt; maxInclusive</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MAXINCLUSIVE</name>) != 0)
                                            &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>
                                                FACET_MINEXCLUSIVE</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>
                                                            <name>fDVs</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fValidationDV</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>compare</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>fMinExclusive</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>fMaxInclusive</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        != -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"minExclusive-less-than-maxInclusive"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>fMinExclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fMaxInclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.10.c1 must: minInclusive &lt; maxExclusive</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0)
                                            &amp;&amp; ((<name>fFacetsDefined</name> &amp; <name>
                                                FACET_MININCLUSIVE</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>
                                                            <name>fDVs</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fValidationDV</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>compare</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>fMinInclusive</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>fMaxExclusive</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        != -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"minInclusive-less-than-maxExclusive"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>fMinInclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fMaxExclusive</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.12.c1 must: fractionDigits &lt;= totalDigits</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_FRACTIONDIGITS</name>) !=
                                            0) &amp;&amp;
                                            ((<name>fFacetsDefined</name> &amp; <name>FACET_TOTALDIGITS</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fFractionDigits</name>
                                                        &gt;
                                                        <name>fTotalDigits</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"fractionDigits-totalDigits"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>Integer</name>.
                                                                                            <name>toString</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        fFractionDigits
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>Integer</name>.
                                                                                            <name>toString</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fTotalDigits
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// step 3: check facets against base</comment>
                                <comment type="line">// check 4.3.1.c1 error: length &amp; (fBase.maxLength |
                                    fBase.minLength)
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_LENGTH</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MINLENGTH</name>) != 0 &amp;&amp;
                                                        <name>fLength</name>
                                                        &lt;
                                                        <name><name>fBase</name>.
                                                            <name>fMinLength</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// length, fBase.minLength and
                                                            fBase.maxLength defined
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"length-minLength-maxLength.d"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>fLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fBase</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                fMinLength
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MAXLENGTH</name>) != 0 &amp;&amp;
                                                        <name>fLength</name>
                                                        &gt;
                                                        <name><name>fBase</name>.
                                                            <name>fMaxLength</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// length and fBase.maxLength defined
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"length-minLength-maxLength.e"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>fLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fBase</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                fMaxLength
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_LENGTH</name>) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// check 4.3.1.c2 error: length !=
                                                            fBase.length
                                                        </comment>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fLength</name>
                                                                    !=
                                                                    <name><name>fBase</name>.
                                                                        <name>fLength</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"length-valid-restriction"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fLength
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        fBase</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        fLength
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <name>fTypeName</name>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>

                                    <comment type="line">// check 4.3.1.c1 error: fBase.length &amp; (maxLength |
                                        minLength)
                                    </comment>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>(
                                                    <name><name>fBase</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_LENGTH</name>) != 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fFacetsDefined</name> &amp; <name>
                                                                FACET_MINLENGTH</name>) != 0 &amp;&amp;
                                                                <name><name>fBase</name>.
                                                                    <name>fLength</name>
                                                                </name>
                                                                &lt;
                                                                <name>fMinLength</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// fBase.length, minLength and
                                                                    maxLength defined
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        "length-minLength-maxLength.d"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <name>fTypeName</name>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        fBase</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        fLength
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fMinLength
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>fFacetsDefined</name> &amp; <name>
                                                                FACET_MAXLENGTH</name>) != 0 &amp;&amp;
                                                                <name><name>fBase</name>.
                                                                    <name>fLength</name>
                                                                </name>
                                                                &gt;
                                                                <name>fMaxLength</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// fBase.length and maxLength
                                                                    defined
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        "length-minLength-maxLength.e"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        fBase</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        fLength
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fMaxLength
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>

                                <comment type="line">// check 4.3.2.c1 must: minLength &lt;= fBase.maxLength</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MINLENGTH</name> ) != 0 )
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MAXLENGTH</name> ) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fMinLength</name>
                                                                    &gt;
                                                                    <name><name>fBase</name>.
                                                                        <name>fMaxLength</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "minLength-less-than-equal-to-maxLength"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fMinLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fMaxLength
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>(
                                                                <name><name>fBase</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MINLENGTH</name>) != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>(
                                                                            <name><name>fBase</name>.
                                                                                <name>fFixedFacet</name>
                                                                            </name>
                                                                            &amp; <name>FACET_MINLENGTH</name>) != 0
                                                                            &amp;&amp; <name>fMinLength</name> !=
                                                                            <name><name>fBase</name>.
                                                                                <name>fMinLength</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "FixedFacetValue"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{<expr>
                                                                                                        "minLength"</expr>,
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Integer</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        toString
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                fMinLength
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Integer</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        toString
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    fBase</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    fMinLength
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                fTypeName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>

                                                                <comment type="line">// check 4.3.2.c2 error: minLength
                                                                    &lt; fBase.minLength
                                                                </comment>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>fMinLength</name>
                                                                            &lt;
                                                                            <name><name>fBase</name>.
                                                                                <name>fMinLength</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "minLength-valid-restriction"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Integer</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        toString
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                fMinLength
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Integer</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        toString
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    fBase</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    fMinLength
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                fTypeName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>


                                <comment type="line">// check 4.3.2.c1 must: maxLength &lt; fBase.minLength</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_MAXLENGTH</name> ) != 0 )
                                            &amp;&amp; ((
                                            <name><name>fBase</name>.
                                                <name>fFacetsDefined</name>
                                            </name>
                                            &amp; <name>FACET_MINLENGTH</name> ) != 0 )
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fMaxLength</name>
                                                        &lt;
                                                        <name><name>fBase</name>.
                                                            <name>fMinLength</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                "minLength-less-than-equal-to-maxLength"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fBase</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                fMinLength
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fMaxLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.3.c1 error: maxLength &gt; fBase.maxLength</comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MAXLENGTH</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MAXLENGTH</name>) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>( (
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_MAXLENGTH</name>) != 0 )&amp;&amp; <name>
                                                                        fMaxLength
                                                                    </name> !=
                                                                    <name><name>fBase</name>.
                                                                        <name>fMaxLength</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FixedFacetValue"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{<expr>
                                                                                                "maxLength"</expr>,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fMaxLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fMaxLength
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fMaxLength</name>
                                                                    &gt;
                                                                    <name><name>fBase</name>.
                                                                        <name>fMaxLength</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "maxLength-valid-restriction"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fMaxLength
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fMaxLength
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="block">/* // check 4.3.7.c2 error:
                                    // maxInclusive &gt; fBase.maxInclusive
                                    // maxInclusive &gt;= fBase.maxExclusive
                                    // maxInclusive &lt; fBase.minInclusive
                                    // maxInclusive &lt;= fBase.minExclusive

                                    if (((fFacetsDefined &amp; FACET_MAXINCLUSIVE) != 0)) {
                                    if (((fBase.fFacetsDefined &amp; FACET_MAXINCLUSIVE) != 0)) {
                                    result = fDVs[fValidationDV].compare(fMaxInclusive, fBase.fMaxInclusive);
                                    if ((fBase.fFixedFacet &amp; FACET_MAXINCLUSIVE) != 0 &amp;&amp; result != 0) {
                                    reportError( "FixedFacetValue", new Object[]{"maxInclusive", fMaxInclusive,
                                    fBase.fMaxInclusive, fTypeName});
                                    }
                                    if (result != -1 &amp;&amp; result != 0) {
                                    reportError( "maxInclusive-valid-restriction.1", new Object[]{fMaxInclusive,
                                    fBase.fMaxInclusive, fTypeName});
                                    }
                                    }
                                    if (((fBase.fFacetsDefined &amp; FACET_MAXEXCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMaxInclusive, fBase.fMaxExclusive) != -1){
                                    reportError( "maxInclusive-valid-restriction.1", new Object[]{fMaxInclusive,
                                    fBase.fMaxExclusive, fTypeName});
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MININCLUSIVE) != 0)) {
                                    result = fDVs[fValidationDV].compare(fMaxInclusive, fBase.fMinInclusive);
                                    if (result != 1 &amp;&amp; result != 0) {
                                    reportError( "maxInclusive-valid-restriction.1", new Object[]{fMaxInclusive,
                                    fBase.fMinInclusive, fTypeName});
                                    }
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MINEXCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMaxInclusive, fBase.fMinExclusive ) != 1)
                                    reportError( "maxInclusive-valid-restriction.1", new Object[]{fMaxInclusive,
                                    fBase.fMinExclusive, fTypeName});
                                    }

                                    // check 4.3.8.c3 error:
                                    // maxExclusive &gt; fBase.maxExclusive
                                    // maxExclusive &gt; fBase.maxInclusive
                                    // maxExclusive &lt;= fBase.minInclusive
                                    // maxExclusive &lt;= fBase.minExclusive
                                    if (((fFacetsDefined &amp; FACET_MAXEXCLUSIVE) != 0)) {
                                    if ((( fBase.fFacetsDefined &amp; FACET_MAXEXCLUSIVE) != 0)) {
                                    result= fDVs[fValidationDV].compare(fMaxExclusive, fBase.fMaxExclusive);
                                    if ((fBase.fFixedFacet &amp; FACET_MAXEXCLUSIVE) != 0 &amp;&amp; result != 0) {
                                    reportError( "FixedFacetValue", new Object[]{"maxExclusive", fMaxExclusive,
                                    fBase.fMaxExclusive, fTypeName});
                                    }
                                    if (result != -1 &amp;&amp; result != 0) {
                                    reportError( "maxExclusive-valid-restriction.1", new Object[]{fMaxExclusive,
                                    fBase.fMaxExclusive, fTypeName});
                                    }
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MAXINCLUSIVE) != 0)) {
                                    result= fDVs[fValidationDV].compare(fMaxExclusive, fBase.fMaxInclusive);
                                    if (result != -1 &amp;&amp; result != 0) {
                                    reportError( "maxExclusive-valid-restriction.2", new Object[]{fMaxExclusive,
                                    fBase.fMaxInclusive, fTypeName});
                                    }
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MINEXCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMaxExclusive, fBase.fMinExclusive ) != 1)
                                    reportError( "maxExclusive-valid-restriction.3", new Object[]{fMaxExclusive,
                                    fBase.fMinExclusive, fTypeName});

                                    if ((( fBase.fFacetsDefined &amp; FACET_MININCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMaxExclusive, fBase.fMinInclusive) != 1)
                                    reportError( "maxExclusive-valid-restriction.4", new Object[]{fMaxExclusive,
                                    fBase.fMinInclusive, fTypeName});
                                    }

                                    // check 4.3.9.c3 error:
                                    // minExclusive &lt; fBase.minExclusive
                                    // minExclusive &gt; fBase.maxInclusive
                                    // minExclusive &lt; fBase.minInclusive
                                    // minExclusive &gt;= fBase.maxExclusive
                                    if (((fFacetsDefined &amp; FACET_MINEXCLUSIVE) != 0)) {
                                    if ((( fBase.fFacetsDefined &amp; FACET_MINEXCLUSIVE) != 0)) {
                                    result= fDVs[fValidationDV].compare(fMinExclusive, fBase.fMinExclusive);
                                    if ((fBase.fFixedFacet &amp; FACET_MINEXCLUSIVE) != 0 &amp;&amp; result != 0) {
                                    reportError( "FixedFacetValue", new Object[]{"minExclusive", fMinExclusive,
                                    fBase.fMinExclusive, fTypeName});
                                    }
                                    if (result != 1 &amp;&amp; result != 0) {
                                    reportError( "minExclusive-valid-restriction.1", new Object[]{fMinExclusive,
                                    fBase.fMinExclusive, fTypeName});
                                    }
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MAXINCLUSIVE) != 0)) {
                                    result=fDVs[fValidationDV].compare(fMinExclusive, fBase.fMaxInclusive);

                                    if (result != -1 &amp;&amp; result != 0) {
                                    reportError( "minExclusive-valid-restriction.2", new Object[]{fMinExclusive,
                                    fBase.fMaxInclusive, fTypeName});
                                    }
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MININCLUSIVE) != 0)) {
                                    result = fDVs[fValidationDV].compare(fMinExclusive, fBase.fMinInclusive);

                                    if (result != 1 &amp;&amp; result != 0) {
                                    reportError( "minExclusive-valid-restriction.3", new Object[]{fMinExclusive,
                                    fBase.fMinInclusive, fTypeName});
                                    }
                                    }

                                    if ((( fBase.fFacetsDefined &amp; FACET_MAXEXCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMinExclusive, fBase.fMaxExclusive) != -1)
                                    reportError( "minExclusive-valid-restriction.4", new Object[]{fMinExclusive,
                                    fBase.fMaxExclusive, fTypeName});
                                    }

                                    // check 4.3.10.c2 error:
                                    // minInclusive &lt; fBase.minInclusive
                                    // minInclusive &gt; fBase.maxInclusive
                                    // minInclusive &lt;= fBase.minExclusive
                                    // minInclusive &gt;= fBase.maxExclusive
                                    if (((fFacetsDefined &amp; FACET_MININCLUSIVE) != 0)) {
                                    if (((fBase.fFacetsDefined &amp; FACET_MININCLUSIVE) != 0)) {
                                    result = fDVs[fValidationDV].compare(fMinInclusive, fBase.fMinInclusive);

                                    if ((fBase.fFixedFacet &amp; FACET_MININCLUSIVE) != 0 &amp;&amp; result != 0) {
                                    reportError( "FixedFacetValue", new Object[]{"minInclusive", fMinInclusive,
                                    fBase.fMinInclusive, fTypeName});
                                    }
                                    if (result != 1 &amp;&amp; result != 0) {
                                    reportError( "minInclusive-valid-restriction.1", new Object[]{fMinInclusive,
                                    fBase.fMinInclusive, fTypeName});
                                    }
                                    }
                                    if ((( fBase.fFacetsDefined &amp; FACET_MAXINCLUSIVE) != 0)) {
                                    result=fDVs[fValidationDV].compare(fMinInclusive, fBase.fMaxInclusive);
                                    if (result != -1 &amp;&amp; result != 0) {
                                    reportError( "minInclusive-valid-restriction.2", new Object[]{fMinInclusive,
                                    fBase.fMaxInclusive, fTypeName});
                                    }
                                    }
                                    if ((( fBase.fFacetsDefined &amp; FACET_MINEXCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMinInclusive, fBase.fMinExclusive ) != 1)
                                    reportError( "minInclusive-valid-restriction.3", new Object[]{fMinInclusive,
                                    fBase.fMinExclusive, fTypeName});
                                    if ((( fBase.fFacetsDefined &amp; FACET_MAXEXCLUSIVE) != 0) &amp;&amp;
                                    fDVs[fValidationDV].compare(fMinInclusive, fBase.fMaxExclusive) != -1)
                                    reportError( "minInclusive-valid-restriction.4", new Object[]{fMinInclusive,
                                    fBase.fMaxExclusive, fTypeName});
                                    }
                                    */
                                </comment>
                                <comment type="line">// check 4.3.11.c1 error: totalDigits &gt; fBase.totalDigits
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_TOTALDIGITS</name>) != 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_TOTALDIGITS</name>) != 0)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_TOTALDIGITS</name>) != 0 &amp;&amp; <name>
                                                                        fTotalDigits
                                                                    </name> !=
                                                                    <name><name>fBase</name>.
                                                                        <name>fTotalDigits</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FixedFacetValue"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{<expr>
                                                                                                "totalDigits"</expr>,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fTotalDigits
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fTotalDigits
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fTotalDigits</name>
                                                                    &gt;
                                                                    <name><name>fBase</name>.
                                                                        <name>fTotalDigits</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "totalDigits-valid-restriction"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fTotalDigits
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fTotalDigits
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.12.c1 must: fractionDigits &lt;= base.totalDigits
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_FRACTIONDIGITS</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_TOTALDIGITS</name>) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fFractionDigits</name>
                                                                    &gt;
                                                                    <name><name>fBase</name>.
                                                                        <name>fTotalDigits</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"fractionDigits-totalDigits"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fFractionDigits
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fTotalDigits
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <name>fTypeName</name>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.12.c2 error: fractionDigits &gt;
                                    fBase.fractionDigits
                                </comment>
                                <comment type="line">// check fixed value for fractionDigits</comment>
                                <if>if
                                    <condition>(
                                        <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_FRACTIONDIGITS</name>) !=
                                            0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>fBase</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_FRACTIONDIGITS</name>) != 0)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>fBase</name>.
                                                                        <name>fFixedFacet</name>
                                                                    </name>
                                                                    &amp; <name>FACET_FRACTIONDIGITS</name>) != 0 &amp;&amp; <name>
                                                                        fFractionDigits
                                                                    </name> !=
                                                                    <name><name>fBase</name>.
                                                                        <name>fFractionDigits</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"FixedFacetValue"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{<expr>
                                                                                                "fractionDigits"</expr>,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fFractionDigits
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fFractionDigits
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fFractionDigits</name>
                                                                    &gt;
                                                                    <name><name>fBase</name>.
                                                                        <name>fFractionDigits</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "fractionDigits-valid-restriction"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fFractionDigits
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            Integer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                toString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fBase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            fFractionDigits
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>fTypeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// check 4.3.6.c1 error:</comment>
                                <comment type="line">// (whiteSpace = preserve || whiteSpace = replace) &amp;&amp;
                                    fBase.whiteSpace = collapese or
                                </comment>
                                <comment type="line">// whiteSpace = preserve &amp;&amp; fBase.whiteSpace = replace
                                </comment>

                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_WHITESPACE</name>) != 0
                                            &amp;&amp; (
                                            <name><name>fBase</name>.
                                                <name>fFacetsDefined</name>
                                            </name>
                                            &amp; <name>FACET_WHITESPACE</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>fBase</name>.
                                                            <name>fFixedFacet</name>
                                                        </name>
                                                        &amp; <name>FACET_WHITESPACE</name>) != 0 &amp;&amp;  <name>
                                                            fWhiteSpace
                                                        </name> !=
                                                        <name><name>fBase</name>.
                                                            <name>fWhiteSpace</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"FixedFacetValue"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{<expr>"whiteSpace"</expr>,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>whiteSpaceValue</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fWhiteSpace
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>whiteSpaceValue</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fBase</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                fWhiteSpace
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fWhiteSpace</name>
                                                        == <name>WS_PRESERVE</name> &amp;&amp;
                                                        <name><name>fBase</name>.
                                                            <name>fWhiteSpace</name>
                                                        </name>
                                                        ==
                                                        <name>WS_COLLAPSE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"whiteSpace-valid-restriction.1"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    , <expr>"preserve"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fWhiteSpace</name>
                                                        == <name>WS_REPLACE</name> &amp;&amp;
                                                        <name><name>fBase</name>.
                                                            <name>fWhiteSpace</name>
                                                        </name>
                                                        ==
                                                        <name>WS_COLLAPSE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"whiteSpace-valid-restriction.1"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    , <expr>"replace"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fWhiteSpace</name>
                                                        == <name>WS_PRESERVE</name> &amp;&amp;
                                                        <name><name>fBase</name>.
                                                            <name>fWhiteSpace</name>
                                                        </name>
                                                        ==
                                                        <name>WS_REPLACE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"whiteSpace-valid-restriction.2"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">//fFacetsDefined != null</comment>

                    <comment type="line">// step 4: inherit other facets from base (including fTokeyType)</comment>

                    <comment type="line">// inherit length</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_LENGTH</name>) == 0 &amp;&amp; (
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_LENGTH</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_LENGTH</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fLength</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fLength</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>lengthAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>lengthAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit minLength</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MINLENGTH</name>) == 0 &amp;&amp; (
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_MINLENGTH</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_MINLENGTH</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fMinLength</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMinLength</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>minLengthAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>minLengthAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit maxLength</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MAXLENGTH</name>) == 0 &amp;&amp; (
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_MAXLENGTH</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_MAXLENGTH</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fMaxLength</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMaxLength</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>maxLengthAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>maxLengthAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit pattern</comment>
                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_PATTERN</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_PATTERN</name>) == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fPattern</name>
                                                    =
                                                    <name><name>fBase</name>.
                                                        <name>fPattern</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fPatternStr</name>
                                                    =
                                                    <name><name>fBase</name>.
                                                        <name>fPatternStr</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |=
                                                    <name>FACET_PATTERN</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fBase</name>.<name>fPattern</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                -1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &gt;= 0
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>--
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fPattern</name>.
                                                                    <name>addElement</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fBase</name>.<name>
                                                                                    fPattern</name>.
                                                                                    <name>elementAt</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fPatternStr</name>.
                                                                    <name>addElement</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fBase</name>.<name>
                                                                                    fPatternStr</name>.
                                                                                    <name>elementAt</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>fBase</name>.
                                                            <name>patternAnnotations</name>
                                                        </name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fBase</name>.<name>
                                                                                    patternAnnotations</name>.
                                                                                    <name>getLength</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            -1
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr><name>i</name>&gt;=0
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>--
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>patternAnnotations</name>.
                                                                                <name>add</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fBase</name>
                                                                                                .<name>
                                                                                                    patternAnnotations</name>.
                                                                                                <name>item</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>i</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </for>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit whiteSpace</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_WHITESPACE</name>) == 0 &amp;&amp; (
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_WHITESPACE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_WHITESPACE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fWhiteSpace</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fWhiteSpace</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>whiteSpaceAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>whiteSpaceAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit enumeration</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_ENUMERATION</name>) == 0 &amp;&amp; (
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_ENUMERATION</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_ENUMERATION</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEnumeration</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fEnumeration</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>enumerationAnnotations</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>enumerationAnnotations</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit maxExclusive</comment>
                    <if>if
                        <condition>(
                            <expr>((
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MAXINCLUSIVE</name>) != 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_MAXEXCLUSIVE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fMaxExclusive</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMaxExclusive</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>maxExclusiveAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>maxExclusiveAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit maxInclusive</comment>
                    <if>if
                        <condition>(
                            <expr>((
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_MAXINCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MAXINCLUSIVE</name>) != 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_MAXINCLUSIVE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fMaxInclusive</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMaxInclusive</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>maxInclusiveAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>maxInclusiveAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit minExclusive</comment>
                    <if>if
                        <condition>(
                            <expr>((
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_MINEXCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MINEXCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MININCLUSIVE</name>) != 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_MINEXCLUSIVE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fMinExclusive</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMinExclusive</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>minExclusiveAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>minExclusiveAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit minExclusive</comment>
                    <if>if
                        <condition>(
                            <expr>((
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_MININCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MINEXCLUSIVE</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_MININCLUSIVE</name>) != 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_MININCLUSIVE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fMinInclusive</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fMinInclusive</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>minInclusiveAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>minInclusiveAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit totalDigits</comment>
                    <if>if
                        <condition>(
                            <expr>((
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_TOTALDIGITS</name>) != 0) &amp;&amp;
                                !((<name>fFacetsDefined</name> &amp; <name>FACET_TOTALDIGITS</name>) != 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_TOTALDIGITS</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fTotalDigits</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fTotalDigits</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>totalDigitsAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>totalDigitsAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// inherit fractionDigits</comment>
                    <if>if
                        <condition>(
                            <expr>((
                                <name><name>fBase</name>.
                                    <name>fFacetsDefined</name>
                                </name>
                                &amp; <name>FACET_FRACTIONDIGITS</name>) != 0)
                                &amp;&amp; !((<name>fFacetsDefined</name> &amp; <name>FACET_FRACTIONDIGITS</name>) != 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFacetsDefined</name>
                                        |=
                                        <name>FACET_FRACTIONDIGITS</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fFractionDigits</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fFractionDigits</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fractionDigitsAnnotation</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fractionDigitsAnnotation</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">//inherit tokeytype</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fPatternType</name> == <name>SPECIAL_PATTERN_NONE</name> ) &amp;&amp; (
                                <name><name>fBase</name>.
                                    <name>fPatternType</name>
                                </name>
                                != <name>SPECIAL_PATTERN_NONE</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fPatternType</name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fPatternType</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// step 5: mark fixed values</comment>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            |=
                            <name><name>fBase</name>.
                                <name>fFixedFacet</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//step 6: setting fundamental facets</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>caclFundamentalFacets</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">//applyFacets()</comment>

            <comment type="javadoc">/**
                * validate a value, and return the compiled form
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>validate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>context</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>context</name>
                                    =
                                    <name>fEmptyContext</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>validatedInfo</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>validatedInfo</name>
                                    = new
                                    <call>
                                        <name>ValidatedInfo</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>memberType</name>
                                    </name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>

                    <comment type="line">// first normalize string value, and convert it to actual value</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>needNormalize</name> =
                            <init>
                                <expr><name>context</name>==<name>null</name>||
                                    <call>
                                        <name><name>context</name>.
                                            <name>needToNormalize</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>ob</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getActualValue</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>content</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>context</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>validatedInfo</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>needNormalize</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>validate</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>validatedInfo</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>ob</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * validate a value, and return the compiled form
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ValidatedInfo</name>
                </type>
                <name>validateWithInfo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>context</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>context</name>
                                    =
                                    <name>fEmptyContext</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>validatedInfo</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>validatedInfo</name>
                                    = new
                                    <call>
                                        <name>ValidatedInfo</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>memberType</name>
                                    </name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>

                    <comment type="line">// first normalize string value, and convert it to actual value</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>needNormalize</name> =
                            <init>
                                <expr><name>context</name>==<name>null</name>||
                                    <call>
                                        <name><name>context</name>.
                                            <name>needToNormalize</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getActualValue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>content</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>validatedInfo</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>needNormalize</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>validate</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>validatedInfo</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>validatedInfo</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * validate a value, and return the compiled form
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>validate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>context</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>context</name>
                                    =
                                    <name>fEmptyContext</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>validatedInfo</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>validatedInfo</name>
                                    = new
                                    <call>
                                        <name>ValidatedInfo</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>memberType</name>
                                    </name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>

                    <comment type="line">// first normalize string value, and convert it to actual value</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>needNormalize</name> =
                            <init>
                                <expr><name>context</name>==<name>null</name>||
                                    <call>
                                        <name><name>context</name>.
                                            <name>needToNormalize</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>ob</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getActualValue</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>content</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>context</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>validatedInfo</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>needNormalize</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>validate</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>validatedInfo</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>ob</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * validate an actual value against this DV
                *
                * @param context the validation context
                * @param validatedInfo used to provide the actual value and member types
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>validate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>context</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>context</name>
                                    =
                                    <name>fEmptyContext</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <comment type="line">// then validate the actual value against the facets</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>context</name>.
                                        <name>needFacetChecking</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                (<name>fFacetsDefined</name> != 0 &amp;&amp; <name>fFacetsDefined</name> != <name>
                                FACET_WHITESPACE</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkFacets</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>validatedInfo</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// now check extra rules: for ID/IDREF/ENTITY</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>context</name>.
                                        <name>needExtraChecking</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkExtraRules</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>context</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>validatedInfo</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>checkFacets</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>ob</name> =
                            <init>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>actualValue</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name> =
                            <init>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>normalizedValue</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>actualValueType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ShortList</name>
                            </type>
                            <name>itemType</name> =
                            <init>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>itemValueTypes</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// For QName and NOTATION types, we don't check length facets</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationDV</name>
                                != <name>DV_QNAME</name> &amp;&amp; <name>fValidationDV</name> !=
                                <name>DV_NOTATION</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fDVs</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fValidationDV</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>getDataLength</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ob</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// maxLength</comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MAXLENGTH</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>length</name>
                                                        &gt;
                                                        <name>fMaxLength</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-maxLength-valid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>content</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>length
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fMaxLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//minLength</comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MINLENGTH</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>length</name>
                                                        &lt;
                                                        <name>fMinLength</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-minLength-valid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>content</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>length
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fMinLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//length</comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_LENGTH</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>length</name>
                                                        !=
                                                        <name>fLength</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-length-valid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>content</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>length
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Integer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>fLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>fTypeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//enumeration</comment>
                    <if>if
                        <condition>(
                            <expr>((<name>fFacetsDefined</name> &amp; <name>FACET_ENUMERATION</name>) != 0 )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>present</name> =
                                        <init>
                                            <expr>false</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>enumSize</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fEnumeration</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>short</name>
                                        </type>
                                        <name>primitiveType1</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>convertToPrimitiveKind</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>type</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>enumSize</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>short</name>
                                                </type>
                                                <name>primitiveType2</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>convertToPrimitiveKind</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fEnumerationType</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>primitiveType1</name> == <name>primitiveType2</name> ||
                                                    <name>primitiveType1</name>
                                                    ==
                                                    <name><name>XSConstants</name>.
                                                        <name>ANYSIMPLETYPE_DT</name>
                                                    </name>
                                                    &amp;&amp; <name>primitiveType2</name> ==
                                                    <name><name>XSConstants</name>.
                                                        <name>STRING_DT</name>
                                                    </name>
                                                    ||
                                                    <name>primitiveType1</name>
                                                    ==
                                                    <name><name>XSConstants</name>.
                                                        <name>STRING_DT</name>
                                                    </name>
                                                    &amp;&amp; <name>primitiveType2</name> ==
                                                    <name><name>XSConstants</name>.
                                                        <name>ANYSIMPLETYPE_DT</name>
                                                    </name>
                                                    )
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>fEnumeration</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>equals</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ob</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>primitiveType1</name>
                                                                ==
                                                                <name><name>XSConstants</name>.
                                                                    <name>LIST_DT</name>
                                                                </name>
                                                                || <name>primitiveType1</name> ==
                                                                <name><name>XSConstants</name>.
                                                                    <name>LISTOFUNION_DT</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>ShortList</name>
                                                                        </type>
                                                                        <name>enumItemType</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fEnumerationItemType</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <specifier>final</specifier>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>typeList1Length</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <name>itemType</name>
                                                                                != <name>null</name> ?
                                                                                <call>
                                                                                    <name><name>itemType</name>.
                                                                                        <name>getLength</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                : 0
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <specifier>final</specifier>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>typeList2Length</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <name>enumItemType</name>
                                                                                != <name>null</name> ?
                                                                                <call>
                                                                                    <name><name>enumItemType</name>.
                                                                                        <name>getLength</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                : 0
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>typeList1Length</name>
                                                                            ==
                                                                            <name>typeList2Length</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>j</name>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <for>for (
                                                                                <init>
                                                                                    <expr>
                                                                                        <name>j</name>
                                                                                        = 0
                                                                                    </expr>
                                                                                    ;
                                                                                </init>
                                                                                <condition>
                                                                                    <expr>
                                                                                        <name>j</name>
                                                                                        &lt;
                                                                                        <name>typeList1Length</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </condition>
                                                                                <incr>
                                                                                    <expr>++
                                                                                        <name>j</name>
                                                                                    </expr>
                                                                                </incr>
                                                                                )
                                                                                <block>{
                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <specifier>final
                                                                                                </specifier>
                                                                                                <name>short</name>
                                                                                            </type>
                                                                                            <name>primitiveItem1</name> =
                                                                                            <init>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            convertToPrimitiveKind
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                itemType</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                item
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        j
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </init>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <specifier>final
                                                                                                </specifier>
                                                                                                <name>short</name>
                                                                                            </type>
                                                                                            <name>primitiveItem2</name> =
                                                                                            <init>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            convertToPrimitiveKind
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                enumItemType</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                item
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        j
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </init>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>primitiveItem1
                                                                                                </name>
                                                                                                !=
                                                                                                <name>primitiveItem2
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                primitiveItem1
                                                                                                            </name>
                                                                                                            ==
                                                                                                            <name><name>
                                                                                                                XSConstants</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    ANYSIMPLETYPE_DT
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            &amp;&amp; <name>
                                                                                                            primitiveItem2
                                                                                                        </name> ==
                                                                                                            <name><name>
                                                                                                                XSConstants</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    STRING_DT
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            ||
                                                                                                            <name>
                                                                                                                primitiveItem1
                                                                                                            </name>
                                                                                                            ==
                                                                                                            <name><name>
                                                                                                                XSConstants</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    STRING_DT
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            &amp;&amp; <name>
                                                                                                            primitiveItem2
                                                                                                        </name> ==
                                                                                                            <name><name>
                                                                                                                XSConstants</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    ANYSIMPLETYPE_DT
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <continue>
                                                                                                                continue;
                                                                                                            </continue>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                </if>
                                                                                                <break>break;</break>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                    }
                                                                                </block>
                                                                            </for>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>j</name>
                                                                                        ==
                                                                                        <name>typeList1Length</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>present</name>
                                                                                                = true
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        <break>break;</break>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>present</name>
                                                                        = true
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>present</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-enumeration-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fEnumeration</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//fractionDigits</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_FRACTIONDIGITS</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>scale</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fDVs</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fValidationDV</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>getFractionDigits</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ob</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>scale</name>
                                            &gt;
                                            <name>fFractionDigits</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-fractionDigits-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Integer</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>scale</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Integer</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fFractionDigits</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//totalDigits</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_TOTALDIGITS</name>)!=0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>totalDigits</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fDVs</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fValidationDV</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>getTotalDigits</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ob</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>totalDigits</name>
                                            &gt;
                                            <name>fTotalDigits</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-totalDigits-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Integer</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>totalDigits</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Integer</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fTotalDigits</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>compare</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//maxinclusive</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MAXINCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>compare</name>
                                        =
                                        <name>
                                            <name>fDVs</name>
                                            <index>[
                                                <expr>
                                                    <name>fValidationDV</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>compare</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ob</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fMaxInclusive</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>compare</name>
                                            != -1 &amp;&amp; <name>compare</name> != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-maxInclusive-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fMaxInclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//maxExclusive</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>compare</name>
                                        =
                                        <name>
                                            <name>fDVs</name>
                                            <index>[
                                                <expr>
                                                    <name>fValidationDV</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>compare</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ob</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fMaxExclusive</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>compare</name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-maxExclusive-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fMaxExclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//minInclusive</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MININCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>compare</name>
                                        =
                                        <name>
                                            <name>fDVs</name>
                                            <index>[
                                                <expr>
                                                    <name>fValidationDV</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>compare</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ob</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fMinInclusive</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>compare</name>
                                            != 1 &amp;&amp; <name>compare</name> != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-minInclusive-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fMinInclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//minExclusive</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_MINEXCLUSIVE</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>compare</name>
                                        =
                                        <name>
                                            <name>fDVs</name>
                                            <index>[
                                                <expr>
                                                    <name>fValidationDV</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>compare</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ob</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fMinExclusive</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>compare</name>
                                            != 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-minExclusive-valid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fMinExclusive</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>fTypeName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>checkExtraRules</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>ob</name> =
                            <init>
                                <expr>
                                    <name><name>validatedInfo</name>.
                                        <name>actualValue</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_ATOMIC</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fDVs</name>
                                            <index>[
                                                <expr>
                                                    <name>fValidationDV</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>checkExtraRules</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ob</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>context</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fVariety</name>
                                        ==
                                        <name>VARIETY_LIST</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name><name>ListDV</name>.
                                                        <name>ListData</name>
                                                    </name>
                                                </type>
                                                <name>values</name> =
                                                <init>
                                                    <expr>(
                                                        <name><name>ListDV</name>.
                                                            <name>ListData</name>
                                                        </name>
                                                        )
                                                        <name>ob</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>len</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>values</name>.
                                                                <name>getLength</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fItemType</name>.
                                                        <name>fVariety</name>
                                                    </name>
                                                    ==
                                                    <name>VARIETY_UNION</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>XSSimpleTypeDecl</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>memberTypes</name> =
                                                            <init>
                                                                <expr>(
                                                                    <name>
                                                                        <name>XSSimpleTypeDecl</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    )
                                                                    <name><name>validatedInfo</name>.
                                                                        <name>memberTypes</name>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>XSSimpleType</name>
                                                            </type>
                                                            <name>memberType</name> =
                                                            <init>
                                                                <expr>
                                                                    <name><name>validatedInfo</name>.
                                                                        <name>memberType</name>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name> =
                                                                <init>
                                                                    <expr><name>len</name>-1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &gt;= 0
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>--
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>validatedInfo</name>.
                                                                        <name>actualValue</name>
                                                                    </name>
                                                                    =
                                                                    <call>
                                                                        <name><name>values</name>.
                                                                            <name>item</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>validatedInfo</name>.
                                                                        <name>memberType</name>
                                                                    </name>
                                                                    =
                                                                    <name>
                                                                        <name>memberTypes</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fItemType</name>.
                                                                            <name>checkExtraRules</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>context</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>validatedInfo</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </for>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>validatedInfo</name>.
                                                                <name>memberType</name>
                                                            </name>
                                                            =
                                                            <name>memberType</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// (fVariety == VARIETY_ATOMIC)</comment>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name> =
                                                                <init>
                                                                    <expr><name>len</name>-1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &gt;= 0
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>--
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>validatedInfo</name>.
                                                                        <name>actualValue</name>
                                                                    </name>
                                                                    =
                                                                    <call>
                                                                        <name><name>values</name>.
                                                                            <name>item</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fItemType</name>.
                                                                            <name>checkExtraRules</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>context</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>validatedInfo</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>actualValue</name>
                                                </name>
                                                =
                                                <name>values</name>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// (fVariety == VARIETY_UNION)</comment>

                                        <expr_stmt>
                                            <expr>((<name>XSSimpleTypeDecl</name>)
                                                <name><name>validatedInfo</name>.
                                                    <name>memberType</name>
                                                </name>
                                                ).
                                                <call>
                                                    <name>checkExtraRules</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>context</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>validatedInfo</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// checkExtraRules()</comment>

            <comment type="line">//we can still return object for internal use.</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Object</name>
                </type>
                <name>getActualValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>validatedInfo</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>needNormalize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>nvalue</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>needNormalize</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>nvalue</name>
                                        =
                                        <call>
                                            <name>normalize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>content</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fWhiteSpace</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>nvalue</name>
                                        =
                                        <call>
                                            <name><name>content</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_PATTERN</name> ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>RegularExpression</name>
                                        </type>
                                        <name>regex</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>idx</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>fPattern</name>.
                                                            <name>size</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    -1
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>idx</name>
                                            &gt;= 0
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>idx</name>--
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>regex</name>
                                                = (<name>RegularExpression</name>)
                                                <call>
                                                    <name><name>fPattern</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>idx</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <call>
                                                        <name><name>regex</name>.
                                                            <name>matches</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>nvalue</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>InvalidDatatypeValueException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"cvc-pattern-valid"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>content</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>fPatternStr</name>.
                                                                                            <name>elementAt</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>idx</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ,

                                                                                <expr>
                                                                                    <name>fTypeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_ATOMIC</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// validate special kinds of token, in place of old pattern
                                    matching
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fPatternType</name>
                                            !=
                                            <name>SPECIAL_PATTERN_NONE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{

                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>seenErr</name> =
                                                    <init>
                                                        <expr>false</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fPatternType</name>
                                                        ==
                                                        <name>SPECIAL_PATTERN_NMTOKEN</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// PATTERN "\\c+"</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>seenErr</name>
                                                                = !
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isValidNmtoken</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>nvalue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>fPatternType</name>
                                                                ==
                                                                <name>SPECIAL_PATTERN_NAME</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// PATTERN "\\i\\c*"</comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>seenErr</name>
                                                                        = !
                                                                        <call>
                                                                            <name><name>XMLChar</name>.
                                                                                <name>isValidName</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nvalue</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fPatternType</name>
                                                                        ==
                                                                        <name>SPECIAL_PATTERN_NCNAME</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">// PATTERN
                                                                            "[\\i-[:]][\\c-[:]]*"
                                                                        </comment>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>seenErr</name>
                                                                                = !
                                                                                <call>
                                                                                    <name><name>XMLChar</name>.
                                                                                        <name>isValidNCName</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>nvalue</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>seenErr</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>nvalue</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>
                                                                                                SPECIAL_PATTERN_STRING
                                                                                            </name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>fPatternType
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <expr_stmt>
                                    <expr>
                                        <name><name>validatedInfo</name>.
                                            <name>normalizedValue</name>
                                        </name>
                                        =
                                        <name>nvalue</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Object</name>
                                        </type>
                                        <name>avalue</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fDVs</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fValidationDV</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>getActualValue</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>nvalue</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>context</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>validatedInfo</name>.
                                            <name>actualValue</name>
                                        </name>
                                        =
                                        <name>avalue</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>validatedInfo</name>.
                                            <name>actualValueType</name>
                                        </name>
                                        =
                                        <name>fBuiltInKind</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <return>return
                                    <expr>
                                        <name>avalue</name>
                                    </expr>
                                    ;
                                </return>

                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fVariety</name>
                                        ==
                                        <name>VARIETY_LIST</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>StringTokenizer</name>
                                                </type>
                                                <name>parsedList</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>StringTokenizer</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>nvalue</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>" "</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>countOfTokens</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>parsedList</name>.
                                                                <name>countTokens</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Object</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>avalue</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>countOfTokens</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>boolean</name>
                                                </type>
                                                <name>isUnion</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fItemType</name>.
                                                                <name>getVariety</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        ==
                                                        <name>VARIETY_UNION</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>short</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>itemTypes</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>short</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>isUnion</name>
                                                                    ? <name>countOfTokens</name> : 1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name>isUnion</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>itemTypes</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name><name>fItemType</name>.
                                                            <name>fBuiltInKind</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSSimpleTypeDecl</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>memberTypes</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>XSSimpleTypeDecl</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>countOfTokens</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for(
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name>countOfTokens</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr>
                                                    <name>i</name>
                                                    ++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <comment type="line">// we can't call fItemType.validate(), otherwise
                                                    checkExtraRules()
                                                </comment>
                                                <comment type="line">// will be called twice: once in
                                                    fItemType.validate, once in
                                                </comment>
                                                <comment type="line">// validate method of this type.</comment>
                                                <comment type="line">// so we take two steps to get the actual value:
                                                </comment>
                                                <comment type="line">// 1. fItemType.getActualValue()</comment>
                                                <comment type="line">// 2. fItemType.chekcFacets()</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>avalue</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <call>
                                                            <name><name>fItemType</name>.
                                                                <name>getActualValue</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>parsedList</name>.
                                                                                <name>nextToken</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>context</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>validatedInfo</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>false</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>context</name>.
                                                                    <name>needFacetChecking</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            &amp;&amp;
                                                            (
                                                            <name><name>fItemType</name>.
                                                                <name>fFacetsDefined</name>
                                                            </name>
                                                            != 0 &amp;&amp;
                                                            <name><name>fItemType</name>.
                                                                <name>fFacetsDefined</name>
                                                            </name>
                                                            != <name>FACET_WHITESPACE</name>)
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fItemType</name>.
                                                                            <name>checkFacets</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>validatedInfo</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>memberTypes</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        = (<name>XSSimpleTypeDecl</name>)
                                                        <name><name>validatedInfo</name>.
                                                            <name>memberType</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>isUnion</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>itemTypes</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>memberTypes</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <name>fBuiltInKind</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name><name>ListDV</name>.
                                                        <name>ListData</name>
                                                    </name>
                                                </type>
                                                <name>v</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name><name>ListDV</name>.
                                                                <name>ListData</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>avalue</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>actualValue</name>
                                                </name>
                                                =
                                                <name>v</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>actualValueType</name>
                                                </name>
                                                = <name>isUnion</name> ?
                                                <name><name>XSConstants</name>.
                                                    <name>LISTOFUNION_DT</name>
                                                </name>
                                                :
                                                <name><name>XSConstants</name>.
                                                    <name>LIST_DT</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>memberType</name>
                                                </name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>memberTypes</name>
                                                </name>
                                                =
                                                <name>memberTypes</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>itemValueTypes</name>
                                                </name>
                                                = new
                                                <call>
                                                    <name>ShortListImpl</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>itemTypes</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>itemTypes</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>validatedInfo</name>.
                                                    <name>normalizedValue</name>
                                                </name>
                                                =
                                                <name>nvalue</name>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <return>return
                                            <expr>
                                                <name>v</name>
                                            </expr>
                                            ;
                                        </return>

                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// (fVariety == VARIETY_UNION)</comment>
                                        <for>for(
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name><name>fMemberTypes</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <try>try
                                                    <block>{
                                                        <comment type="line">// we can't call fMemberType[i].validate(),
                                                            otherwise checkExtraRules()
                                                        </comment>
                                                        <comment type="line">// will be called twice: once in
                                                            fMemberType[i].validate, once in
                                                        </comment>
                                                        <comment type="line">// validate method of this type.</comment>
                                                        <comment type="line">// so we take two steps to get the actual
                                                            value:
                                                        </comment>
                                                        <comment type="line">// 1. fMemberType[i].getActualValue()
                                                        </comment>
                                                        <comment type="line">// 2. fMemberType[i].chekcFacets()
                                                        </comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Object</name>
                                                                </type>
                                                                <name>aValue</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fMemberTypes</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        .
                                                                        <call>
                                                                            <name>getActualValue</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>content</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>context</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>validatedInfo</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>true</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>context</name>.
                                                                            <name>needFacetChecking</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    &amp;&amp;
                                                                    (
                                                                    <name>
                                                                        <name>fMemberTypes</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    .<name>fFacetsDefined</name> != 0 &amp;&amp;
                                                                    <name>
                                                                        <name>fMemberTypes</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    .<name>fFacetsDefined</name> != <name>
                                                                    FACET_WHITESPACE</name>)
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>
                                                                                <name>fMemberTypes</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>checkFacets</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>validatedInfo</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>validatedInfo</name>.
                                                                    <name>memberType</name>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>fMemberTypes</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <return>return
                                                            <expr>
                                                                <name>aValue</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                    <catch>catch(
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                </type>
                                                                <name>invalidValue</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                        <block>{
                                                            }
                                                        </block>
                                                    </catch>
                                                </try>
                                                }
                                            </block>
                                        </for>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>StringBuffer</name>
                                                </type>
                                                <name>typesBuffer</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>StringBuffer</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSSimpleTypeDecl</name>
                                                </type>
                                                <name>decl</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for(
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name><name>fMemberTypes</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>i</name>
                                                            != 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>typesBuffer</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>" | "</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>decl</name>
                                                        =
                                                        <name>
                                                            <name>fMemberTypes</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>decl</name>.
                                                                <name>fTargetNamespace</name>
                                                            </name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>typesBuffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'{'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>typesBuffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>decl</name>.
                                                                                        <name>fTargetNamespace</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>typesBuffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'}'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>typesBuffer</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>decl</name>.
                                                                            <name>fTypeName</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>decl</name>.
                                                                <name>fEnumeration</name>
                                                            </name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Vector</name>
                                                                    </type>
                                                                    <name>v</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name><name>decl</name>.
                                                                                <name>fEnumeration</name>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>typesBuffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>" : ["</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <for>for(
                                                                <init>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>j</name> =
                                                                        <init>
                                                                            <expr>0</expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </init>
                                                                <condition>
                                                                    <expr>
                                                                        <name>j</name>
                                                                        &lt;
                                                                        <call>
                                                                            <name><name>v</name>.
                                                                                <name>size</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </condition>
                                                                <incr>
                                                                    <expr><name>j</name>++
                                                                    </expr>
                                                                </incr>
                                                                )
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>j</name>
                                                                                != 0
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>typesBuffer</name>.
                                                                                            <name>append</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>','</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                        </then>
                                                                    </if>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>typesBuffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>v</name>.
                                                                                                    <name>elementAt
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>j
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </for>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>typesBuffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>']'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>InvalidDatatypeValueException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"cvc-datatype-valid.1.2.3"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>content</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <name>fTypeName</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>typesBuffer</name>.
                                                                                <name>toString</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//getActualValue()</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEqual</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value1</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>value1</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//isEqual()</comment>

            <comment type="line">// determine whether the two values are identical</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isIdentical</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value1</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fDVs</name>
                                <index>[
                                    <expr>
                                        <name>fValidationDV</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <call>
                                <name>isIdentical</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//isIdentical()</comment>

            <comment type="line">// normalize the string according to the whiteSpace facet</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>normalize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>ws</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <name>content</name>
                                    == <name>null</name> ? 0 :
                                    <call>
                                        <name><name>content</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                == 0 || <name>ws</name> ==
                                <name>WS_PRESERVE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>content</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>sb</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ws</name>
                                ==
                                <name>WS_REPLACE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// when it's replace, just replace #x9, #xa, #xd by #x20</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>ch</name> !=
                                                    0xd
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>char</name>)0x20
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isLeading</name> =
                                        <init>
                                            <expr>true</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// when it's collapse</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// append real characters, so we passed leading ws
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>ch</name> !=
                                                    0xd &amp;&amp; <name>ch</name> != 0x20
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>sb</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>isLeading</name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// for whitespaces, we skip all following ws
                                                    </comment>
                                                    <for>for (<init>;</init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; <name>len</name>-1
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>content</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr><name>i</name>+1
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>ch</name>
                                                                        != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>
                                                                        ch
                                                                    </name> != 0xd &amp;&amp; <name>ch</name> != 0x20
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <break>break;</break>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    <comment type="line">// if it's not a leading or tailing ws, then
                                                        append a space
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; <name>len</name> - 1 &amp;&amp; !
                                                                <name>isLeading</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>sb</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>char</name>)0x20
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>sb</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// normalize the string according to the whiteSpace facet</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>normalize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>ws</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>content</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// If pattern is not defined, we can skip some of the normalization.</comment>
                    <comment type="line">// Otherwise we have to normalize the data for correct result of</comment>
                    <comment type="line">// pattern validation.</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_PATTERN</name> ) == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>short</name>
                                        </type>
                                        <name>norm_type</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fDVNormalizeType</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fValidationDV</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>norm_type</name>
                                            ==
                                            <name>NORMALIZE_NONE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>toString</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>norm_type</name>
                                                    ==
                                                    <name>NORMALIZE_TRIM</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>content</name>.
                                                                    <name>toString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>trim</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!(<name>content</name>
                                <name>instanceof</name>
                                <name>StringBuffer</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>strContent</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>toString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>
                                        <call>
                                            <name>normalize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>strContent</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>ws</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>sb</name> =
                            <init>
                                <expr>(<name>StringBuffer</name>)
                                    <name>content</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>""</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ws</name>
                                ==
                                <name>WS_PRESERVE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>ws</name>
                                ==
                                <name>WS_REPLACE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// when it's replace, just replace #x9, #xa, #xd by #x20</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>sb</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    == 0x9 || <name>ch</name> == 0xa || <name>ch</name> == 0xd
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>setCharAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>(<name>char</name>)0x20
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>, <name>j</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isLeading</name> =
                                        <init>
                                            <expr>true</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// when it's collapse</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>sb</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// append real characters, so we passed leading ws
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>ch</name> !=
                                                    0xd &amp;&amp; <name>ch</name> != 0x20
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>sb</name>.
                                                                    <name>setCharAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr><name>j</name>++
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>isLeading</name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// for whitespaces, we skip all following ws
                                                    </comment>
                                                    <for>for (<init>;</init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; <name>len</name>-1
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>sb</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr><name>i</name>+1
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>ch</name>
                                                                        != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>
                                                                        ch
                                                                    </name> != 0xd &amp;&amp; <name>ch</name> != 0x20
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <break>break;</break>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    <comment type="line">// if it's not a leading or tailing ws, then
                                                        append a space
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; <name>len</name> - 1 &amp;&amp; !
                                                                <name>isLeading</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>sb</name>.
                                                                            <name>setCharAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr><name>j</name>++
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>char</name>)0x20
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>sb</name>.
                                                <name>setLength</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>sb</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>void</name>
                </type>
                <name>reportError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeFacetException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>InvalidDatatypeFacetException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>args</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>whiteSpaceValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>ws</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>
                                <name>WS_FACET_STRING</name>
                                <index>[
                                    <expr>
                                        <name>ws</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fundamental Facet: ordered.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getOrdered</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fOrdered</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fundamental Facet: bounded.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBounded</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fBounded</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fundamental Facet: cardinality.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getFinite</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fFinite</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fundamental Facet: numeric.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getNumeric</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fNumeric</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. [Facets]: check whether a facet is defined on this
                * type.
                * @param facetName The name of the facet.
                * @return True if the facet is defined, false otherwise.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDefinedFacet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>facetName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>fFacetsDefined</name> &amp; <name>facetName</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPatternType</name>
                                !=
                                <name>SPECIAL_PATTERN_NONE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>facetName</name>
                                    ==
                                    <name>FACET_PATTERN</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationDV</name>
                                ==
                                <name>DV_INTEGER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>facetName</name>
                                    == <name>FACET_PATTERN</name> || <name>facetName</name> ==
                                    <name>FACET_FRACTIONDIGITS</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * [facets]: all facets defined on this type. The value is a bit
                * combination of FACET_XXX constants of all defined facets.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getDefinedFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPatternType</name>
                                !=
                                <name>SPECIAL_PATTERN_NONE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>(<name>short</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    |
                                                    <name>FACET_PATTERN</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationDV</name>
                                ==
                                <name>DV_INTEGER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>(<name>short</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fFacetsDefined</name>
                                                    | <name>FACET_PATTERN</name> |
                                                    <name>FACET_FRACTIONDIGITS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fFacetsDefined</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. [Facets]: check whether a facet is defined and
                * fixed on this type.
                * @param facetName The name of the facet.
                * @return True if the facet is fixed, false otherwise.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isFixedFacet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>facetName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>fFixedFacet</name> &amp; <name>facetName</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationDV</name>
                                ==
                                <name>DV_INTEGER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>facetName</name>
                                    ==
                                    <name>FACET_FRACTIONDIGITS</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * [facets]: all defined facets for this type which are fixed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getFixedFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationDV</name>
                                ==
                                <name>DV_INTEGER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>(<name>short</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fFixedFacet</name>
                                                    |
                                                    <name>FACET_FRACTIONDIGITS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fFixedFacet</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a value of a single constraining facet for
                * this simple type definition. This method must not be used to retrieve
                * values for &lt;code&gt;enumeration&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt; facets.
                * @param facetName The name of the facet, i.e.
                * &lt;code&gt;FACET_LENGTH, FACET_TOTALDIGITS &lt;/code&gt; (see
                * &lt;code&gt;XSConstants&lt;/code&gt;). To retrieve the value for a pattern or
                * an enumeration, see &lt;code&gt;enumeration&lt;/code&gt; and
                * &lt;code&gt;pattern&lt;/code&gt;.
                * @return A value of the facet specified in &lt;code&gt;facetName&lt;/code&gt; for
                * this simple type definition or &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getLexicalFacetValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>facetName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>facetName</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>FACET_LENGTH</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fLength</name> == -1)?<name>null</name>:
                                        <call>
                                            <name><name>Integer</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fLength</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_MINLENGTH</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fMinLength</name> == -1)?<name>null</name>:
                                        <call>
                                            <name><name>Integer</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fMinLength</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_MAXLENGTH</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fMaxLength</name> == -1)?<name>null</name>:
                                        <call>
                                            <name><name>Integer</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fMaxLength</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_WHITESPACE</name>
                                </expr>
                                :
                                <return>return
                                    <expr>
                                        <name>
                                            <name>WS_FACET_STRING</name>
                                            <index>[
                                                <expr>
                                                    <name>fWhiteSpace</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_MAXINCLUSIVE</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fMaxInclusive</name> == <name>null</name>)?<name>null</name>:
                                        <call>
                                            <name><name>fMaxInclusive</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_MAXEXCLUSIVE</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fMaxExclusive</name> == <name>null</name>)?<name>null</name>:
                                        <call>
                                            <name><name>fMaxExclusive</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_MINEXCLUSIVE</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fMinExclusive</name> == <name>null</name>)?<name>null</name>:
                                        <call>
                                            <name><name>fMinExclusive</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_MININCLUSIVE</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fMinInclusive</name> == <name>null</name>)?<name>null</name>:
                                        <call>
                                            <name><name>fMinInclusive</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_TOTALDIGITS</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fValidationDV</name>
                                            ==
                                            <name>DV_INTEGER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>"0"</expr>;
                                        </return>
                                    </then>
                                </if>
                                <return>return
                                    <expr>(<name>fTotalDigits</name> == -1)?<name>null</name>:
                                        <call>
                                            <name><name>Integer</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fTotalDigits</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <case>case
                                <expr>
                                    <name>FACET_FRACTIONDIGITS</name>
                                </expr>
                                :
                                <return>return
                                    <expr>(<name>fFractionDigits</name> == -1)?<name>null</name>:
                                        <call>
                                            <name><name>Integer</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fFractionDigits</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            }
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A list of enumeration values if it exists, otherwise an empty
                * &lt;code&gt;StringList&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>StringList</name>
                </type>
                <name>getLexicalEnumeration</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fLexicalEnumeration</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fEnumeration</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name><name>StringListImpl</name>.
                                                    <name>EMPTY_LIST</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fEnumeration</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                            <index>[]</index>
                                        </type>
                                        <name>strs</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>String</name>
                                                    <index>[
                                                        <expr>
                                                            <name>size</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>strs</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <call>
                                                <name><name>fEnumeration</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>toString</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>fLexicalEnumeration</name>
                                        = new
                                        <call>
                                            <name>StringListImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>strs</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>size</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fLexicalEnumeration</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A list of actual enumeration values if it exists, otherwise an empty
                * &lt;code&gt;ObjectList&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ObjectList</name>
                </type>
                <name>getActualEnumeration</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fActualEnumeration</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fActualEnumeration</name>
                                        = new
                                        <class>
                                            <super>
                                                <name>ObjectList</name>
                                            </super>
                                            <argument_list>()</argument_list>
                                            <block>{
                                                <function>
                                                    <type>
                                                        <specifier>public</specifier>
                                                        <name>int</name>
                                                    </type>
                                                    <name>getLength</name>
                                                    <parameter_list>()</parameter_list>
                                                    <block>{
                                                        <return>return
                                                            <expr>(<name>fEnumeration</name> != <name>null</name>) ?
                                                                <call>
                                                                    <name><name>fEnumeration</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                : 0
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </function>
                                                <function>
                                                    <type>
                                                        <specifier>public</specifier>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>contains</name>
                                                    <parameter_list>(
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>Object</name>
                                                                </type>
                                                                <name>item</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                    </parameter_list>
                                                    <block>{
                                                        <return>return
                                                            <expr>(<name>fEnumeration</name> != <name>null</name> &amp;&amp;
                                                                <call>
                                                                    <name><name>fEnumeration</name>.
                                                                        <name>contains</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>item</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                )
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </function>
                                                <function>
                                                    <type>
                                                        <specifier>public</specifier>
                                                        <name>Object</name>
                                                    </type>
                                                    <name>item</name>
                                                    <parameter_list>(
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>index</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                    </parameter_list>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>index</name>
                                                                    &lt; 0 || <name>index</name> &gt;=
                                                                    <call>
                                                                        <name>getLength</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <return>return
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEnumeration</name>.
                                                                        <name>elementAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>index</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </function>
                                                }
                                            </block>
                                        </class>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fActualEnumeration</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A list of enumeration type values (as a list of ShortList objects) if it exists, otherwise returns
                * null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ObjectList</name>
                </type>
                <name>getEnumerationItemTypeList</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEnumerationItemTypeList</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fEnumerationItemType</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fEnumerationItemTypeList</name>
                                        = new
                                        <class>
                                            <super>
                                                <name>ObjectList</name>
                                            </super>
                                            <argument_list>()</argument_list>
                                            <block>{
                                                <function>
                                                    <type>
                                                        <specifier>public</specifier>
                                                        <name>int</name>
                                                    </type>
                                                    <name>getLength</name>
                                                    <parameter_list>()</parameter_list>
                                                    <block>{
                                                        <return>return
                                                            <expr>(<name>fEnumerationItemType</name> != <name>
                                                                null</name>) ?
                                                                <name><name>fEnumerationItemType</name>.
                                                                    <name>length</name>
                                                                </name>
                                                                : 0
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </function>
                                                <function>
                                                    <type>
                                                        <specifier>public</specifier>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>contains</name>
                                                    <parameter_list>(
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>Object</name>
                                                                </type>
                                                                <name>item</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                    </parameter_list>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fEnumerationItemType</name>
                                                                    == <name>null</name> || !(<name>item</name>
                                                                    <name>instanceof</name>
                                                                    <name>ShortList</name>)
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <return>return <expr>false</expr>;
                                                                </return>
                                                            </then>
                                                        </if>
                                                        <for>for(
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>fEnumerationItemType</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>
                                                                            <name>fEnumerationItemType</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        ==
                                                                        <name>item</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <return>return <expr>true</expr>;
                                                                    </return>
                                                                </then>
                                                            </if>
                                                        </for>
                                                        <return>return <expr>false</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </function>
                                                <function>
                                                    <type>
                                                        <specifier>public</specifier>
                                                        <name>Object</name>
                                                    </type>
                                                    <name>item</name>
                                                    <parameter_list>(
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>index</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                    </parameter_list>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>index</name>
                                                                    &lt; 0 || <name>index</name> &gt;=
                                                                    <call>
                                                                        <name>getLength</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <return>return
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>
                                                                <name>
                                                                    <name>fEnumerationItemType</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>index</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </function>
                                                }
                                            </block>
                                        </class>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fEnumerationItemTypeList</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ShortList</name>
                </type>
                <name>getEnumerationTypeList</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEnumerationTypeList</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fEnumerationType</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fEnumerationTypeList</name>
                                        = new
                                        <call>
                                            <name>ShortListImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEnumerationType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEnumerationType</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fEnumerationTypeList</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A list of pattern values if it exists, otherwise an empty
                * &lt;code&gt;StringList&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>StringList</name>
                </type>
                <name>getLexicalPattern</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPatternType</name>
                                == <name>SPECIAL_PATTERN_NONE</name> &amp;&amp; <name>fValidationDV</name> != <name>
                                DV_INTEGER
                            </name> &amp;&amp; <name>fPatternStr</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name><name>StringListImpl</name>.
                                        <name>EMPTY_LIST</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fLexicalPattern</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <name>fPatternStr</name>
                                                == <name>null</name> ? 0 :
                                                <call>
                                                    <name><name>fPatternStr</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                            <index>[]</index>
                                        </type>
                                        <name>strs</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fPatternType</name>
                                            ==
                                            <name>SPECIAL_PATTERN_NMTOKEN</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>strs</name>
                                                    = new
                                                    <name>
                                                        <name>String</name>
                                                        <index>[
                                                            <expr><name>size</name>+1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>strs</name>
                                                        <index>[
                                                            <expr>
                                                                <name>size</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = "\\c+"
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fPatternType</name>
                                                    ==
                                                    <name>SPECIAL_PATTERN_NAME</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>strs</name>
                                                            = new
                                                            <name>
                                                                <name>String</name>
                                                                <index>[
                                                                    <expr><name>size</name>+1
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>strs</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>size</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = "\\i\\c*"
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>fPatternType</name>
                                                            ==
                                                            <name>SPECIAL_PATTERN_NCNAME</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>strs</name>
                                                                    = new
                                                                    <name>
                                                                        <name>String</name>
                                                                        <index>[
                                                                            <expr><name>size</name>+2
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>strs</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>size</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    = "\\i\\c*"
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>strs</name>
                                                                        <index>[
                                                                            <expr><name>size</name>+1
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    = "[\\i-[:]][\\c-[:]]*"
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fValidationDV</name>
                                                                    ==
                                                                    <name>DV_INTEGER</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>strs</name>
                                                                            = new
                                                                            <name>
                                                                                <name>String</name>
                                                                                <index>[
                                                                                    <expr><name>size</name>+1
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>
                                                                                <name>strs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>size</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            = "[\\-+]?[0-9]+"
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>strs</name>
                                                                            = new
                                                                            <name>
                                                                                <name>String</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>size</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>strs</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            = (<name>String</name>)
                                            <call>
                                                <name><name>fPatternStr</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>fLexicalPattern</name>
                                        = new
                                        <call>
                                            <name>StringListImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>strs</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>strs</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fLexicalPattern</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * [annotations]: a set of annotations for this simple type component if
                * it exists, otherwise an empty &lt;code&gt;XSObjectList&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getAnnotations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fAnnotations</name> != <name>null</name>) ? <name>fAnnotations</name> :
                            <name><name>XSObjectListImpl</name>.
                                <name>EMPTY_LIST</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>caclFundamentalFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setOrdered</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setNumeric</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBounded</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setCardinality</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setOrdered</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// When {variety} is atomic, {value} is inherited from {value} of {base type
                        definition}. For all "primitive" types {value} is as specified in the table in Fundamental
                        Facets (C.1).
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_ATOMIC</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>fOrdered</name>
                                        </name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fOrdered</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>

                        <comment type="line">// When {variety} is list, {value} is false.</comment>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fVariety</name>
                                        ==
                                        <name>VARIETY_LIST</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>fOrdered</name>
                                                </name>
                                                =
                                                <name>ORDERED_FALSE</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>

                                <comment type="line">// When {variety} is union, the {value} is partial unless one of
                                    the following:
                                </comment>
                                <comment type="line">// 1. If every member of {member type definitions} is derived from
                                    a common ancestor other than the simple ur-type, then {value} is the same as that
                                    ancestor's ordered facet.
                                </comment>
                                <comment type="line">// 2. If every member of {member type definitions} has a {value} of
                                    false for the ordered facet, then {value} is false.
                                </comment>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fVariety</name>
                                                ==
                                                <name>VARIETY_UNION</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>length</name> =
                                                        <init>
                                                            <expr>
                                                                <name><name>fMemberTypes</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <comment type="line">// REVISIT: is the length possible to be 0?
                                                </comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>length</name>
                                                            == 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>this</name>.
                                                                        <name>fOrdered</name>
                                                                    </name>
                                                                    =
                                                                    <name>ORDERED_PARTIAL</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <return>return;</return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <comment type="line">// we need to process the first member type before
                                                    entering the loop
                                                </comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>short</name>
                                                        </type>
                                                        <name>ancestorId</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>getPrimitiveDV</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fMemberTypes</name>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                .
                                                                                <name>fValidationDV</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>boolean</name>
                                                        </type>
                                                        <name>commonAnc</name> =
                                                        <init>
                                                            <expr>
                                                                <name>ancestorId</name>
                                                                !=
                                                                <name>DV_ANYSIMPLETYPE</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>boolean</name>
                                                        </type>
                                                        <name>allFalse</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>fMemberTypes</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                .<name>fOrdered</name> ==
                                                                <name>ORDERED_FALSE</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <comment type="line">// for the other member types, check whether the
                                                    value is false
                                                </comment>
                                                <comment type="line">// and whether they have the same ancestor as the
                                                    first one
                                                </comment>
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>1</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <name><name>fMemberTypes</name>.
                                                                <name>length</name>
                                                            </name>
                                                            &amp;&amp; (<name>commonAnc</name> || <name>allFalse</name>)
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>commonAnc</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>commonAnc</name>
                                                                        = <name>ancestorId</name> ==
                                                                        <call>
                                                                            <name>getPrimitiveDV</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fMemberTypes</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                        .
                                                                                        <name>fValidationDV</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>allFalse</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>allFalse</name>
                                                                        =
                                                                        <name>
                                                                            <name>fMemberTypes</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        .<name>fOrdered</name> ==
                                                                        <name>ORDERED_FALSE</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>commonAnc</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// REVISIT: all member types should
                                                                have the same ordered value
                                                            </comment>
                                                            <comment type="line">// just use the first one. Can we
                                                                assume this?
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>this</name>.
                                                                        <name>fOrdered</name>
                                                                    </name>
                                                                    =
                                                                    <name>
                                                                        <name>fMemberTypes</name>
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </name>
                                                                    .
                                                                    <name>fOrdered</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>allFalse</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>fOrdered</name>
                                                                            </name>
                                                                            =
                                                                            <name>ORDERED_FALSE</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>fOrdered</name>
                                                                            </name>
                                                                            =
                                                                            <name>ORDERED_PARTIAL</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//setOrdered</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setNumeric</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_ATOMIC</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>fNumeric</name>
                                        </name>
                                        =
                                        <name><name>fBase</name>.
                                            <name>fNumeric</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fVariety</name>
                                        ==
                                        <name>VARIETY_LIST</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>fNumeric</name>
                                                </name>
                                                = false
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fVariety</name>
                                                ==
                                                <name>VARIETY_UNION</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSSimpleType</name>
                                                            <index>[]</index>
                                                        </type>
                                                        <name>memberTypes</name> =
                                                        <init>
                                                            <expr>
                                                                <name>fMemberTypes</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <for>for(
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <name><name>memberTypes</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>
                                                                        <name>memberTypes</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    .
                                                                    <call>
                                                                        <name>getNumeric</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>fNumeric</name>
                                                                            </name>
                                                                            = false
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <return>return;</return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>fNumeric</name>
                                                        </name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//setNumeric</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setBounded</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_ATOMIC</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(((
                                            <name><name>this</name>.
                                                <name>fFacetsDefined</name>
                                            </name>
                                            &amp; <name>FACET_MININCLUSIVE</name>) != 0) || ((
                                            <name><name>this</name>.
                                                <name>fFacetsDefined</name>
                                            </name>
                                            &amp; <name>FACET_MINEXCLUSIVE</name>) != 0))
                                            &amp;&amp; (((
                                            <name><name>this</name>.
                                                <name>fFacetsDefined</name>
                                            </name>
                                            &amp; <name>FACET_MAXINCLUSIVE</name>) != 0) || ((
                                            <name><name>this</name>.
                                                <name>fFacetsDefined</name>
                                            </name>
                                            &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0))
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>fBounded</name>
                                                    </name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>fBounded</name>
                                                    </name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fVariety</name>
                                        ==
                                        <name>VARIETY_LIST</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>((
                                                    <name><name>this</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_LENGTH</name>) != 0 ) || ( ((
                                                    <name><name>this</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_MINLENGTH</name>) != 0 )
                                                    &amp;&amp; ((
                                                    <name><name>this</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_MAXLENGTH</name>) != 0 ))
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>fBounded</name>
                                                            </name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>fBounded</name>
                                                            </name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fVariety</name>
                                                ==
                                                <name>VARIETY_UNION</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{

                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSSimpleTypeDecl</name>
                                                            <index>[]</index>
                                                        </type>
                                                        <name>memberTypes</name> =
                                                        <init>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>fMemberTypes</name>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>short</name>
                                                        </type>
                                                        <name>ancestorId</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>memberTypes</name>.
                                                                <name>length</name>
                                                            </name>
                                                            &gt; 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ancestorId</name>
                                                                    =
                                                                    <call>
                                                                        <name>getPrimitiveDV</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>memberTypes</name>
                                                                                        <index>[<expr>0</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                    .
                                                                                    <name>fValidationDV</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <for>for(
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <name><name>memberTypes</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>
                                                                        <name>memberTypes</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    .
                                                                    <call>
                                                                        <name>getBounded</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    || (<name>ancestorId</name> !=
                                                                    <call>
                                                                        <name>getPrimitiveDV</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>memberTypes</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                    .
                                                                                    <name>fValidationDV</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    )
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>fBounded</name>
                                                                            </name>
                                                                            = false
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <return>return;</return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>fBounded</name>
                                                        </name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//setBounded</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>specialCardinalityCheck</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>fBase</name>.
                                    <name>fValidationDV</name>
                                </name>
                                ==
                                <name><name>XSSimpleTypeDecl</name>.
                                    <name>DV_DATE</name>
                                </name>
                                ) || (
                                <name><name>fBase</name>.
                                    <name>fValidationDV</name>
                                </name>
                                ==
                                <name><name>XSSimpleTypeDecl</name>.
                                    <name>DV_GYEARMONTH</name>
                                </name>
                                )
                                || (
                                <name><name>fBase</name>.
                                    <name>fValidationDV</name>
                                </name>
                                ==
                                <name><name>XSSimpleTypeDecl</name>.
                                    <name>DV_GYEAR</name>
                                </name>
                                ) || (
                                <name><name>fBase</name>.
                                    <name>fValidationDV</name>
                                </name>
                                ==
                                <name><name>XSSimpleTypeDecl</name>.
                                    <name>DV_GMONTHDAY</name>
                                </name>
                                )
                                || (
                                <name><name>fBase</name>.
                                    <name>fValidationDV</name>
                                </name>
                                ==
                                <name><name>XSSimpleTypeDecl</name>.
                                    <name>DV_GDAY</name>
                                </name>
                                ) || (
                                <name><name>fBase</name>.
                                    <name>fValidationDV</name>
                                </name>
                                ==
                                <name><name>XSSimpleTypeDecl</name>.
                                    <name>DV_GMONTH</name>
                                </name>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">//specialCardinalityCheck()</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setCardinality</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fVariety</name>
                                ==
                                <name>VARIETY_ATOMIC</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fBase</name>.
                                                <name>fFinite</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>fFinite</name>
                                                    </name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// (!fBase.fFinite)</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>((
                                                        <name><name>this</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_LENGTH</name>) != 0 ) || ((
                                                        <name><name>this</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_MAXLENGTH</name>) != 0 )
                                                        || ((
                                                        <name><name>this</name>.
                                                            <name>fFacetsDefined</name>
                                                        </name>
                                                        &amp; <name>FACET_TOTALDIGITS</name>) != 0 )
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>fFinite</name>
                                                                </name>
                                                                = true
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>(((
                                                                <name><name>this</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MININCLUSIVE</name>) != 0 ) || ((
                                                                <name><name>this</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MINEXCLUSIVE</name>) != 0 ))
                                                                &amp;&amp; (((
                                                                <name><name>this</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MAXINCLUSIVE</name>) != 0 ) || ((
                                                                <name><name>this</name>.
                                                                    <name>fFacetsDefined</name>
                                                                </name>
                                                                &amp; <name>FACET_MAXEXCLUSIVE</name>) != 0 ))
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>((
                                                                            <name><name>this</name>.
                                                                                <name>fFacetsDefined</name>
                                                                            </name>
                                                                            &amp; <name>FACET_FRACTIONDIGITS</name>) !=
                                                                            0 ) ||
                                                                            <call>
                                                                                <name>specialCardinalityCheck</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>this</name>.
                                                                                        <name>fFinite</name>
                                                                                    </name>
                                                                                    = true
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>this</name>.
                                                                                        <name>fFinite</name>
                                                                                    </name>
                                                                                    = false
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </else>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>this</name>.
                                                                            <name>fFinite</name>
                                                                        </name>
                                                                        = false
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fVariety</name>
                                        ==
                                        <name>VARIETY_LIST</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>((
                                                    <name><name>this</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_LENGTH</name>) != 0 ) || ( ((
                                                    <name><name>this</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_MINLENGTH</name>) != 0 )
                                                    &amp;&amp; ((
                                                    <name><name>this</name>.
                                                        <name>fFacetsDefined</name>
                                                    </name>
                                                    &amp; <name>FACET_MAXLENGTH</name>) != 0 ))
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>fFinite</name>
                                                            </name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>fFinite</name>
                                                            </name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fVariety</name>
                                                ==
                                                <name>VARIETY_UNION</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSSimpleType</name>
                                                            <index>[]</index>
                                                        </type>
                                                        <name>memberTypes</name> =
                                                        <init>
                                                            <expr>
                                                                <name>fMemberTypes</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <for>for(
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <name><name>memberTypes</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>!(
                                                                    <name>
                                                                        <name>memberTypes</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    .
                                                                    <call>
                                                                        <name>getFinite</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    )
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>fFinite</name>
                                                                            </name>
                                                                            = false
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <return>return;</return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>fFinite</name>
                                                        </name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//setCardinality</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>short</name>
                </type>
                <name>getPrimitiveDV</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>validationDV</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>validationDV</name>
                                == <name>DV_ID</name> || <name>validationDV</name> == <name>DV_IDREF</name> || <name>
                                validationDV
                            </name> ==
                                <name>DV_ENTITY</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>DV_STRING</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>validationDV</name>
                                        ==
                                        <name>DV_INTEGER</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>DV_DECIMAL</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>SCHEMA_1_1_SUPPORT</name>
                                                </name>
                                                &amp;&amp; (<name>validationDV</name> == <name>DV_YEARMONTHDURATION
                                            </name> || <name>validationDV</name> == <name>DV_DAYTIMEDURATION</name>)
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name>DV_DURATION</name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name>validationDV</name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//getPrimitiveDV()</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>derivedFromType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>ancestor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>derivation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: implement according to derivation</comment>

                    <comment type="line">// ancestor is null, retur false</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ancestor</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// ancestor is anyType, return true</comment>
                    <comment type="line">// anyType is the only type whose base type is itself</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>ancestor</name>.
                                        <name>getBaseType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>ancestor</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// recursively get base, and compare it with ancestor</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <name>this</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>type</name>
                                != <name>ancestor</name> &amp;&amp;
                                <comment type="line">// compare with ancestor</comment>
                                <name>type</name>
                                !=
                                <name>fAnySimpleType</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">// reached anySimpleType</comment>
                            <expr_stmt>
                                <expr>
                                    <name>type</name>
                                    =
                                    <call>
                                        <name><name>type</name>.
                                            <name>getBaseType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <return>return
                        <expr>
                            <name>type</name>
                            ==
                            <name>ancestor</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>derivedFrom</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorNS</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>derivation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: implement according to derivation</comment>

                    <comment type="line">// ancestor is null, retur false</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ancestorName</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// ancestor is anyType, return true</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>URI_SCHEMAFORSCHEMA</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ancestorNS</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>ANY_TYPE</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ancestorName</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// recursively get base, and compare it with ancestor</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <name>this</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>!(
                                <call>
                                    <name><name>ancestorName</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>type</name>.
                                                        <name>getName</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                ((<name>ancestorNS</name> == <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>type</name>.
                                        <name>getNamespace</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name>) ||
                                (<name>ancestorNS</name> != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>ancestorNS</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>type</name>.
                                                        <name>getNamespace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ))) &amp;&amp;
                                <comment type="line">// compare with ancestor</comment>
                                <name>type</name>
                                !=
                                <name>fAnySimpleType</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">// reached anySimpleType</comment>
                            <expr_stmt>
                                <expr>
                                    <name>type</name>
                                    = (<name>XSTypeDefinition</name>)
                                    <call>
                                        <name><name>type</name>.
                                            <name>getBaseType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <return>return
                        <expr>
                            <name>type</name>
                            !=
                            <name>fAnySimpleType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if a type is derived from another by restriction, given the name
                * and namespace. See:
                * http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#TypeInfo-isDerivedFrom
                *
                * @param ancestorNS
                * The namspace of the ancestor type declaration
                * @param ancestorName
                * The name of the ancestor type declaration
                * @param derivationMethod
                * The derivation method
                *
                * @return boolean True if the ancestor type is derived from the reference type by the specifiied
                derivation method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDOMDerivedFrom</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorNS</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>derivationMethod</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// ancestor is null, return false</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ancestorName</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// ancestor is anyType, return true</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>SchemaSymbols</name>.<name>URI_SCHEMAFORSCHEMA</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ancestorNS</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>SchemaSymbols</name>.<name>ATTVAL_ANYTYPE</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ancestorName</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp; (((<name>derivationMethod</name>  &amp; <name>DERIVATION_RESTRICTION</name>)
                                != 0)
                                || (<name>derivationMethod</name>  == <name>DERIVATION_ANY</name>))
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// restriction</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>derivationMethod</name> &amp; <name>DERIVATION_RESTRICTION</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>isDerivedByRestriction</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ancestorNS</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>ancestorName</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// list</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>derivationMethod</name> &amp; <name>DERIVATION_LIST</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>isDerivedByList</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ancestorNS</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>ancestorName</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// union</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>derivationMethod</name> &amp; <name>DERIVATION_UNION</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>isDerivedByUnion</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ancestorNS</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>ancestorName</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// extension</comment>
                    <if>if
                        <condition>(
                            <expr>((<name>derivationMethod</name> &amp; <name>DERIVATION_EXTENSION</name>) != 0)
                                &amp;&amp; (((<name>derivationMethod</name> &amp; <name>DERIVATION_RESTRICTION</name>)
                                == 0)
                                &amp;&amp; ((<name>derivationMethod</name> &amp; <name>DERIVATION_LIST</name>) == 0)
                                &amp;&amp; ((<name>derivationMethod</name> &amp; <name>DERIVATION_UNION</name>) == 0))
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If the value of the parameter is 0 i.e. no bit (corresponding to</comment>
                    <comment type="line">// restriction, list, extension or union) is set to 1 for the</comment>
                    <comment type="line">// derivationMethod parameter.</comment>
                    <if>if
                        <condition>(
                            <expr>((<name>derivationMethod</name> &amp; <name>DERIVATION_EXTENSION</name>) == 0)
                                &amp;&amp; (((<name>derivationMethod</name> &amp; <name>DERIVATION_RESTRICTION</name>)
                                == 0)
                                &amp;&amp; ((<name>derivationMethod</name> &amp; <name>DERIVATION_LIST</name>) == 0)
                                &amp;&amp; ((<name>derivationMethod</name> &amp; <name>DERIVATION_UNION</name>) == 0))
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>isDerivedByAny</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ancestorNS</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>ancestorName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Checks if a type is derived from another by any combination of restriction, list ir union. See:
                * http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#TypeInfo-isDerivedFrom
                *
                * @param ancestorNS
                * The namspace of the ancestor type declaration
                * @param ancestorName
                * The name of the ancestor type declaration
                * @param type
                * The reference type definition
                *
                * @return boolean True if the type is derived by restriciton for the reference type
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isDerivedByAny</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorNS</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>derivedFrom</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>oldType</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// for each base, item or member type</comment>
                    <while>while
                        <condition>(
                            <expr>
                                <name>type</name>
                                != <name>null</name> &amp;&amp; <name>type</name> !=
                                <name>oldType</name>
                            </expr>
                            )
                        </condition>
                        <block>{

                            <comment type="line">// If the ancestor type is reached or is the same as this type.
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>(
                                        <call>
                                            <name><name>ancestorName</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>type</name>.
                                                                <name>getName</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        &amp;&amp; ((<name>ancestorNS</name> == <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>type</name>.
                                                <name>getNamespace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == <name>null</name>)
                                        || (<name>ancestorNS</name> != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>ancestorNS</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>type</name>.
                                                                <name>getNamespace</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ))
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>derivedFrom</name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// check if derived by restriction or list or union</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isDerivedByRestriction</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ancestorNS</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>ancestorName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name>isDerivedByList</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ancestorNS</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>ancestorName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>type</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return <expr>true</expr>;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>isDerivedByUnion</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ancestorNS</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>ancestorName</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>type</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return <expr>true</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>oldType</name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// get the base, item or member type depending on the variety</comment>
                            <if>if
                                <condition>(
                                    <expr>((<name>XSSimpleTypeDecl</name>) <name>type</name>).
                                        <call>
                                            <name>getVariety</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name>VARIETY_ABSENT</name>
                                        || ((<name>XSSimpleTypeDecl</name>) <name>type</name>).
                                        <call>
                                            <name>getVariety</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name>VARIETY_ATOMIC</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>type</name>
                                                =
                                                <call>
                                                    <name><name>type</name>.
                                                        <name>getBaseType</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>((<name>XSSimpleTypeDecl</name>) <name>type</name>).
                                                <call>
                                                    <name>getVariety</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ==
                                                <name>VARIETY_UNION</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt; ((<name>XSSimpleTypeDecl</name>) <name>type</name>).
                                                            <call>
                                                                <name>getMemberTypes</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>getLength</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <call>
                                                                    <name>isDerivedByAny</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ancestorNS</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ancestorName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>(<name>XSTypeDefinition</name>)
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>(<name>
                                                                                                XSSimpleTypeDecl</name>)
                                                                                                <name>type</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getMemberTypes</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>item</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>((<name>XSSimpleTypeDecl</name>) <name>type</name>).
                                                        <call>
                                                            <name>getVariety</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        ==
                                                        <name>VARIETY_LIST</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>type</name>
                                                                = ((<name>XSSimpleTypeDecl</name>) <name>type</name>).
                                                                <call>
                                                                    <name>getItemType</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </while>

                    <return>return
                        <expr>
                            <name>derivedFrom</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3
                * Checks if a type is derived from another by restriction. See:
                * http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#TypeInfo-isDerivedFrom
                *
                * @param ancestorNS
                * The namspace of the ancestor type declaration
                * @param ancestorName
                * The name of the ancestor type declaration
                * @param type
                * The reference type definition
                *
                * @return boolean True if the type is derived by restriciton for the
                * reference type
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isDerivedByRestriction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorNS</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>oldType</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>type</name>
                                != <name>null</name> &amp;&amp; <name>type</name> !=
                                <name>oldType</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>(
                                        <call>
                                            <name><name>ancestorName</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>type</name>.
                                                                <name>getName</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        &amp;&amp; ((<name>ancestorNS</name> != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>ancestorNS</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>type</name>.
                                                                <name>getNamespace</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        || (
                                        <call>
                                            <name><name>type</name>.
                                                <name>getNamespace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == <name>null</name> &amp;&amp; <name>ancestorNS</name> == <name>null</name>))
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>oldType</name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>type</name>
                                    =
                                    <call>
                                        <name><name>type</name>.
                                            <name>getBaseType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if a type is derived from another by list. See:
                * http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#TypeInfo-isDerivedFrom
                *
                * @param ancestorNS
                * The namspace of the ancestor type declaration
                * @param ancestorName
                * The name of the ancestor type declaration
                * @param type
                * The reference type definition
                *
                * @return boolean True if the type is derived by list for the reference type
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isDerivedByList</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorNS</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// If the variety is union</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                !=<name>null</name> &amp;&amp; ((<name>XSSimpleTypeDefinition</name>)<name>type</name>).
                                <call>
                                    <name>getVariety</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>VARIETY_LIST</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// get the {item type}</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSTypeDefinition</name>
                                        </type>
                                        <name>itemType</name> =
                                        <init>
                                            <expr>((<name>XSSimpleTypeDefinition</name>)<name>type</name>).
                                                <call>
                                                    <name>getItemType</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// T2 is the {item type definition}</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>itemType</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{

                                            <comment type="line">// T2 is derived from the other type definition by
                                                DERIVATION_RESTRICTION
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>isDerivedByRestriction</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ancestorNS</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>ancestorName</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>itemType</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return <expr>true</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if a type is derived from another by union. See:
                * http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#TypeInfo-isDerivedFrom
                *
                * @param ancestorNS
                * The namspace of the ancestor type declaration
                * @param ancestorName
                * The name of the ancestor type declaration
                * @param type
                * The reference type definition
                *
                * @return boolean True if the type is derived by union for the reference type
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isDerivedByUnion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorNS</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ancestorName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// If the variety is union</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                !=<name>null</name> &amp;&amp; ((<name>XSSimpleTypeDefinition</name>)<name>type</name>).
                                <call>
                                    <name>getVariety</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>VARIETY_UNION</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// get member types</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSObjectList</name>
                                        </type>
                                        <name>memberTypes</name> =
                                        <init>
                                            <expr>((<name>XSSimpleTypeDefinition</name>)<name>type</name>).
                                                <call>
                                                    <name>getMemberTypes</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <call>
                                                <name><name>memberTypes</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <comment type="line">// One of the {member type definitions} is T2.</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>memberTypes</name>.
                                                            <name>item</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// T2 is derived from the other type definition
                                                        by DERIVATION_RESTRICTION
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name>isDerivedByRestriction</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ancestorNS</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ancestorName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>(<name>XSSimpleTypeDefinition</name>)
                                                                                <call>
                                                                                    <name><name>memberTypes</name>.
                                                                                        <name>item</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return <expr>true</expr>;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>


            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XSSimpleTypeDecl</name>
                    </type>
                    <name>fAnySimpleType</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XSSimpleTypeDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"anySimpleType"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>DV_ANYSIMPLETYPE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ORDERED_FALSE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XSConstants</name>.
                                                <name>ANYSIMPLETYPE_DT</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XSSimpleTypeDecl</name>
                    </type>
                    <name>fAnyAtomicType</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XSSimpleTypeDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fAnySimpleType</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"anyAtomicType"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>DV_ANYATOMICTYPE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ORDERED_FALSE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XSSimpleTypeDecl</name>.
                                                <name>ANYATOMICTYPE_DT</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Validation context used to validate facet values.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>ValidationContext</name>
                    </type>
                    <name>fDummyContext</name> =
                    <init>
                        <expr>new
                            <class>
                                <super>
                                    <name>ValidationContext</name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>needFacetChecking</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>needExtraChecking</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>needToNormalize</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>useNamespaces</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>isEntityDeclared</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>isEntityUnparsed</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>isIdDeclared</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>void</name>
                                        </type>
                                        <name>addId</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>void</name>
                                        </type>
                                        <name>addIdRef</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>name</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>String</name>
                                        </type>
                                        <name>getSymbol</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>symbol</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>symbol</name>.
                                                            <name>intern</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>

                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>String</name>
                                        </type>
                                        <name>getURI</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>prefix</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fAnonymous</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A wrapper of ValidationContext, to provide a way of switching to a
                * different Namespace declaration context.
                */
            </comment>
            <class>class <name>ValidationContextImpl</name>
                <super>
                    <implements>implements
                        <name>ValidationContext</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>fExternal</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <constructor>
                        <name>ValidationContextImpl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ValidationContext</name>
                                    </type>
                                    <name>external</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fExternal</name>
                                    =
                                    <name>external</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NamespaceContext</name>
                            </type>
                            <name>fNSContext</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>setNSContext</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>NamespaceContext</name>
                                    </type>
                                    <name>nsContext</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fNSContext</name>
                                    =
                                    <name>nsContext</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>needFacetChecking</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>needFacetChecking</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>needExtraChecking</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>needExtraChecking</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>needToNormalize</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>needToNormalize</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// schema validation is predicated upon namespaces</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>useNamespaces</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEntityDeclared</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>isEntityDeclared</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEntityUnparsed</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>isEntityUnparsed</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isIdDeclared</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>isIdDeclared</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addId</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>addId</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addIdRef</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>addIdRef</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getSymbol</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>symbol</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fExternal</name>.
                                            <name>getSymbol</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>symbol</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getURI</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>prefix</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fNSContext</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>fExternal</name>.
                                                    <name>getURI</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>prefix</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                                <else>else
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>fNSContext</name>.
                                                    <name>getURI</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>prefix</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                </else>
                            </if>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// if it's immutable, can't be reset:</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fIsImmutable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fItemType</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMemberTypes</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fTypeName</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFinalSet</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBase</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fVariety</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fValidationDV</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fFacetsDefined</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFixedFacet</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//for constraining facets</comment>
                    <expr_stmt>
                        <expr>
                            <name>fWhiteSpace</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLength</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinLength</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxLength</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTotalDigits</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFractionDigits</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPattern</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPatternStr</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumeration</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumerationType</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnumerationItemType</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLexicalPattern</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLexicalEnumeration</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxInclusive</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaxExclusive</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinExclusive</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMinInclusive</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>lengthAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>minLengthAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>maxLengthAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>whiteSpaceAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>totalDigitsAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fractionDigitsAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>patternAnnotations</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>enumerationAnnotations</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>maxInclusiveAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>maxExclusiveAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>minInclusiveAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>minExclusiveAnnotation</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fPatternType</name>
                            =
                            <name>SPECIAL_PATTERN_NONE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFacets</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// REVISIT: reset for fundamental facets</comment>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * @see org.apache.xerces.xs.XSObject#getNamespaceItem()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSNamespaceItem</name>
                </type>
                <name>getNamespaceItem</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// REVISIT: implement</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @see java.lang.Object#toString()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>fTargetNamespace</name>
                            </name>
                            +"," +
                            <name><name>this</name>.
                                <name>fTypeName</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A list of constraining facets if it exists, otherwise an empty
                * &lt;code&gt;XSObjectList&lt;/code&gt;. Note: This method must not be used to
                * retrieve values for &lt;code&gt;enumeration&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt;
                * facets.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fFacets</name>
                                == <name>null</name> &amp;&amp;
                                (<name>fFacetsDefined</name> != 0 || <name>fValidationDV</name> == <name>
                                DV_INTEGER</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSFacetImpl</name>
                                            <index>[]</index>
                                        </type>
                                        <name>facets</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>XSFacetImpl</name>
                                                    <index>[<expr>10</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>count</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_WHITESPACE</name>) != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_WHITESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>WS_FACET_STRING</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fWhiteSpace</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_WHITESPACE</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>whiteSpaceAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fLength</name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_LENGTH</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Integer</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fLength</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_LENGTH</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>lengthAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMinLength</name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_MINLENGTH</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Integer</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fMinLength</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_MINLENGTH</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>minLengthAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMaxLength</name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_MAXLENGTH</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Integer</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fMaxLength</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_MAXLENGTH</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>maxLengthAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fTotalDigits</name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_TOTALDIGITS</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Integer</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fTotalDigits</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_TOTALDIGITS</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>totalDigitsAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fValidationDV</name>
                                            ==
                                            <name>DV_INTEGER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_FRACTIONDIGITS</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"0"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFractionDigits</name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_FRACTIONDIGITS</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Integer</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fFractionDigits</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_FRACTIONDIGITS</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fractionDigitsAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMaxInclusive</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_MAXINCLUSIVE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fMaxInclusive</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_MAXINCLUSIVE</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>maxInclusiveAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMaxExclusive</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_MAXEXCLUSIVE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fMaxExclusive</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_MAXEXCLUSIVE</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>maxExclusiveAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMinExclusive</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_MINEXCLUSIVE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fMinExclusive</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_MINEXCLUSIVE</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>minExclusiveAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMinInclusive</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_MININCLUSIVE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fMinInclusive</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>fFixedFacet</name> &amp; <name>
                                                                    FACET_MININCLUSIVE</name>) != 0
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>minInclusiveAnnotation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fFacets</name>
                                        = new
                                        <call>
                                            <name>XSObjectListImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>facets</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>count</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>fFacets</name> != <name>null</name>) ? <name>fFacets</name> :
                            <name><name>XSObjectListImpl</name>.
                                <name>EMPTY_LIST</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A list of enumeration and pattern constraining facets if it exists,
                * otherwise an empty &lt;code&gt;XSObjectList&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getMultiValueFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fMultiValueFacets</name>
                                == <name>null</name> &amp;&amp;
                                ((<name>fFacetsDefined</name> &amp; <name>FACET_ENUMERATION</name>) != 0 ||
                                (<name>fFacetsDefined</name> &amp; <name>FACET_PATTERN</name>) != 0 ||
                                <name>fPatternType</name>
                                != <name>SPECIAL_PATTERN_NONE</name> ||
                                <name>fValidationDV</name>
                                == <name>DV_INTEGER</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSMVFacetImpl</name>
                                            <index>[]</index>
                                        </type>
                                        <name>facets</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>XSMVFacetImpl</name>
                                                    <index>[<expr>2</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>count</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>(<name>fFacetsDefined</name> &amp; <name>FACET_PATTERN</name>) != 0 ||
                                            <name>fPatternType</name>
                                            != <name>SPECIAL_PATTERN_NONE</name> ||
                                            <name>fValidationDV</name>
                                            ==
                                            <name>DV_INTEGER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSMVFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_PATTERN</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>this</name>.
                                                                            <name>getLexicalPattern</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>patternAnnotations</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fEnumeration</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>facets</name>
                                                        <index>[
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    new
                                                    <call>
                                                        <name>XSMVFacetImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>FACET_ENUMERATION</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>this</name>.
                                                                            <name>getLexicalEnumeration</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>enumerationAnnotations</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>count</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fMultiValueFacets</name>
                                        = new
                                        <call>
                                            <name>XSObjectListImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>facets</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>count</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>fMultiValueFacets</name> != <name>null</name>) ?
                            <name>fMultiValueFacets</name>
                            :
                            <name><name>XSObjectListImpl</name>.
                                <name>EMPTY_LIST</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getMinInclusiveValue</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fMinInclusive</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getMinExclusiveValue</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fMinExclusive</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getMaxInclusiveValue</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fMaxInclusive</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getMaxExclusiveValue</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fMaxExclusive</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAnonymous</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>anon</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fAnonymous</name>
                            =
                            <name>anon</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>XSFacetImpl</name>
                <super>
                    <implements>implements
                        <name>XSFacet</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>kind</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>boolean</name>
                            </type>
                            <name>fixed</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>XSAnnotation</name>
                            </type>
                            <name>annotation</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>public</specifier>
                        <name>XSFacetImpl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>kind</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>fixed</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSAnnotation</name>
                                    </type>
                                    <name>annotation</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>kind</name>
                                    </name>
                                    =
                                    <name>kind</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>value</name>
                                    </name>
                                    =
                                    <name>value</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>fixed</name>
                                    </name>
                                    =
                                    <name>fixed</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>annotation</name>
                                    </name>
                                    =
                                    <name>annotation</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSFacet#getAnnotation()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSAnnotation</name>
                        </type>
                        <name>getAnnotation</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>annotation</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSFacet#getFacetKind()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>short</name>
                        </type>
                        <name>getFacetKind</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>kind</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSFacet#getLexicalFacetValue()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getLexicalFacetValue</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>value</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSFacet#isFixed()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>getFixed</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>fixed</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getName()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getName</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getNamespace()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getNamespace</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getNamespaceItem()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSNamespaceItem</name>
                        </type>
                        <name>getNamespaceItem</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// REVISIT: implement</comment>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getType()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>short</name>
                        </type>
                        <name>getType</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>XSConstants</name>.
                                        <name>FACET</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>XSMVFacetImpl</name>
                <super>
                    <implements>implements
                        <name>XSMultiValueFacet</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>kind</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSObjectList</name>
                            </type>
                            <name>annotations</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringList</name>
                            </type>
                            <name>values</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>public</specifier>
                        <name>XSMVFacetImpl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>kind</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>StringList</name>
                                    </type>
                                    <name>values</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSObjectList</name>
                                    </type>
                                    <name>annotations</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>kind</name>
                                    </name>
                                    =
                                    <name>kind</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>values</name>
                                    </name>
                                    =
                                    <name>values</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>annotations</name>
                                    </name>
                                    =
                                    <name>annotations</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>


                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSFacet#getFacetKind()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>short</name>
                        </type>
                        <name>getFacetKind</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>kind</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>


                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSMultiValueFacet#getAnnotations()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSObjectList</name>
                        </type>
                        <name>getAnnotations</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>annotations</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSMultiValueFacet#getLexicalFacetValues()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>StringList</name>
                        </type>
                        <name>getLexicalFacetValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>values</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getName()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getName</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getNamespace()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getNamespace</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getNamespaceItem()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSNamespaceItem</name>
                        </type>
                        <name>getNamespaceItem</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// REVISIT: implement</comment>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.XSObject#getType()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>short</name>
                        </type>
                        <name>getType</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>XSConstants</name>.
                                        <name>MULTIVALUE_FACET</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTypeNamespace</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getNamespace</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDerivedFrom</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>typeNamespaceArg</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>typeNameArg</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>derivationMethod</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>isDOMDerivedFrom</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>typeNamespaceArg</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>typeNameArg</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>derivationMethod</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>short</name>
                </type>
                <name>convertToPrimitiveKind</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>valueType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="javadoc">/** Primitive datatypes. */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>valueType</name>
                                &lt;=
                                <name><name>XSConstants</name>.
                                    <name>NOTATION_DT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>valueType</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="javadoc">/** Types derived from string. */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>valueType</name>
                                &lt;=
                                <name><name>XSConstants</name>.
                                    <name>ENTITY_DT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>XSConstants</name>.
                                            <name>STRING_DT</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="javadoc">/** Types derived from decimal. */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>valueType</name>
                                &lt;=
                                <name><name>XSConstants</name>.
                                    <name>POSITIVEINTEGER_DT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>XSConstants</name>.
                                            <name>DECIMAL_DT</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="javadoc">/** Other types. */</comment>
                    <return>return
                        <expr>
                            <name>valueType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XSSimpleTypeDecl</comment>

</unit>
